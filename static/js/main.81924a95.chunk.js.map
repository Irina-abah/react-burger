{"version":3,"sources":["components/main/main.module.css","components/modal-overlay/modal-overlay.module.css","components/constructor-item/constructor-item.module.css","pages/login/login.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","pages/ingredient-page/ingredient-page.module.css","pages/not-found/not-found.module.css","components/ingredient-details/ingredient-details.module.css","components/app-header/app-header.module.css","services/actions/modal.ts","utils/hooks.ts","utils/constants.ts","utils/cookie.ts","utils/check-response.ts","services/actions/refresh-token.ts","services/actions/get-user.ts","pages/protected-route.tsx","services/actions/ingredients.ts","components/app-header/app-header.tsx","services/actions/order.ts","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/done-icon.gif","components/order-details/order-details.tsx","components/constructor-item/constructor-item.tsx","components/burder-constructor/burder-constructor.tsx","components/ingredient/ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","components/main/main.tsx","services/actions/login.ts","pages/user-form/user-form.tsx","images/eye.svg","images/eye-off.svg","ui-elements/input.tsx","ui-elements/password-input.tsx","images/edit.svg","ui-elements/email-input.tsx","pages/login/login.tsx","services/actions/register.ts","pages/register/register.tsx","services/actions/forgot-pass.ts","pages/forgot-password/forgot-password.tsx","services/actions/reset-pass.ts","pages/reset-password/reset-password.tsx","services/actions/patch-user.ts","services/actions/logout.ts","pages/profile-menu/profile-menu.tsx","pages/profile/profile.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient-page/ingredient-page.tsx","utils/say-date.ts","services/actions/websocket.ts","utils/filter-count.ts","pages/order-page/order-page.tsx","components/order/order.tsx","pages/profile-orders/profile-orders.tsx","pages/not-found/not-found.tsx","components/feed-summary/feed-summary.tsx","components/feed/feed.tsx","components/order-modal/order-modal.tsx","components/app/app.tsx","services/reducers/order.ts","services/reducers/ingredients.ts","services/reducers/modal.ts","services/reducers/register.ts","services/reducers/login.ts","services/reducers/logout.ts","services/reducers/forgot-pass.ts","services/reducers/reset-pass.ts","services/reducers/get-user.ts","services/reducers/refresh-token.ts","services/reducers/patch-user.ts","services/reducers/websocket.ts","services/reducers/index.ts","index.tsx","services/middleware/socketMiddleware.ts","components/burger-ingredients/burger-ingredients.module.css","components/order/order.module.css","components/feed-summary/feed-summary.module.css","ui-elements/input.module.css","components/burder-constructor/burder-constructor.module.css","pages/profile-menu/profile-menu.module.css","components/ingredient/ingredient.module.css","pages/profile/profile.module.css","components/modal/modal.module.css","components/order-details/order-details.module.css","pages/user-form/user-form.module.css","components/feed/feed.module.css","pages/order-page/order-page.module.css","pages/profile-orders/profile-orders.module.css","components/order-modal/order-modal.module.css"],"names":["module","exports","OPEN_MODAL","CLOSE_MODAL","OPEN_MODAL_ORDER","useSelector","selectorHook","useDispatch","dispatchHook","BASE_URL","LOAD_ERROR","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","setCookie","value","props","exp","path","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","checkResponse","res","ok","json","Promise","reject","status","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","handleUserError","type","getUser","dispatch","fetch","headers","Authorization","then","success","user","catch","err","console","log","message","ProtectedRoute","children","rest","useState","isUserLoaded","setUserLoaded","auth","store","isAuthenticated","isLoggedIn","login","init","a","useEffect","render","location","to","pathname","state","from","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_BUN","ADD_INNER_ITEM","REMOVE_INNER_ITEM","UPDATE_CONSTRUCTOR_LIST","RESET_CONSTRUSTOR","handleIngredientsError","Header","className","headerStyles","header","wrapper","nav","exact","nav_item","activeClassName","active","text","logo","MAKE_ORDER_REQUEST","MAKE_ORDER_SUCCESS","MAKE_ORDER_FAILED","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","handleMakeOrderError","ModalOverlay","onClose","overlayStyles","overlay","onMouseDown","modalRoot","getElementById","Modal","title","handleEscClose","e","key","target","addEventListener","removeEventListener","createPortal","modalStyles","container","icon","onClick","OrderDetails","number","order","orderFailed","orderMakeFailed","orderStyles","error","orderNumber","src","doneIcon","alt","ConstructorItem","item","index","moveCard","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","useDrag","id","_id","isDragging","drag","opacity","style","onDrop","preventDefault","itemStyles","food_item","price","thumbnail","image","handleClose","dragId","uuidv4","BurgerConstructor","history","useHistory","ingredients","constructor","innerItems","selectedBun","isOpen","setIsOpen","allBurgerItems","useMemo","concat","isHover","isOver","bun","dropTargerRef","useCallback","dragCard","newCards","splice","updatedItems","totalPrice","reduce","sum","constructorStyles","isLocked","food_list","map","i","isNaN","size","data","items","method","body","JSON","stringify","Ingredient","useLocation","ingredientId","dragRef","background","ingredientStyles","link","ingredient","count","BurgerIngredients","foodData","loadingFailed","foodDataFailed","setCurrent","buns","filter","sauses","mains","bunsRef","sausesRef","mainsRef","allRef","onTab","selectedTab","scrollIntoView","block","behavior","display","ingredientsStyles","tab","menu","onScroll","scrollTop","offsetTop","Main","mainStyles","main","DndProvider","backend","HTML5Backend","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","handleLoginError","UserForm","onSubmit","buttonName","linkName","userStyles","form","Input","Icon","onIconClick","label","onChange","styles","input_container","input_placeholder","input","EyeOff","eyeOff","Eye","eye","PasswordInput","isVisible","setVisible","required","Edit","edit","EmailInput","disabled","setDisabled","Login","setForm","submit","email","password","accessToken","localStorage","setItem","refreshToken","handleInputChange","loginStyles","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","handleRegisterError","Register","register","setState","registerStyles","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","handlePassError","ForgotPassword","setEmail","emailSent","forgot","isEmailSent","forgotPass","forgotStyles","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","handleResetError","ResetPassword","passwordReset","reset","isPasswordReset","token","resetStyles","PATCH_USER_REQUEST","PATCH_USER_SUCCESS","PATCH_USER_FAILED","handlePatchError","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","handleLogoutError","logoutUser","getItem","removeItem","ProfileMenu","profileMenuStyles","Profile","isSuccess","patchUser","isEdit","setIsEdit","profileStyles","profile","inputs","authorization","buttons","invisible","IngredientsDetails","useParams","allItems","selectedItem","modal","find","c","image_large","list","listItem","calories","proteins","fat","carbohydrates","IngredientPage","ingredientPageStyles","sayDate","date","orderDate","setHours","currentDate","day","toLocaleDateString","time","toLocaleTimeString","hour","minute","timeZoneName","WS_CONNECTION_START","WS_CONNECTION_CLOSE","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","wsActions","wsStart","wsClose","onOpen","onError","onMessage","countIgredients","counts","arrayToRender","forEach","x","arrCounts","Object","keys","push","finalArray","findIndex","s","OrderPage","orderId","userPath","useRouteMatch","orders","ws","messages","statusClassname","orderModalStyles","green","orderIngredients","flat","uniqueIngredients","payload","length","orderPageStyles","name_info","image_mobile","round","item_name","prices","quantity","footer","createdAt","total","Order","otherImages","basic","logos","slice","other","ProfileOrders","wsToken","profileOrdersStyles","profile_orders","orders_list","PageNotFound","notFoundStyles","goBack","FeedSummary","allOrders","completedOrders","progressOrders","summaryStyles","status_column","subtitle","totalToday","Feed","feedStyles","OrderModal","o","num","App","handleModalClose","initialState","orderMakeRequest","orderGetRequest","orderGetFailed","foodDataRequest","selectedIngredient","selectedOrder","modalOpened","modalClosed","registerRequest","registerFailed","loginRequest","loginFailed","logoutRequest","logoutFailed","forgotRequest","forgotFailed","resetRequest","resetFailed","getUserRequest","getUserFailed","tokenRequest","tokenFailed","patchUserRequest","patchUserFailed","wsConnected","rootReducer","combineReducers","action","logout","undefined","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","wsUrl","socket","next","WebSocket","close","onopen","event","onerror","onmessage","parsedData","parse","onclose","socketMiddleware","createStore","ReactDOM","StrictMode","basename"],"mappings":"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","file":"static/js/main.81924a95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2W-l3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__AKixE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"food_item\":\"constructor-item_food_item__2bY6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__3BYA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"register_register__1-FiH login_login__3BYA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgot\":\"forgot-password_forgot__2X_gE login_login__3BYA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset\":\"reset-password_reset__bpIz9 login_login__3BYA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ingredient-page_main__1l0L1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"not-found_main__3u66S login_login__3BYA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-details_container__1-8YX\",\"list\":\"ingredient-details_list__2aOfA\",\"listItem\":\"ingredient-details_listItem__2ujZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"wrapper\":\"app-header_wrapper__ECTu6\",\"nav\":\"app-header_nav__1_idE\",\"nav_item\":\"app-header_nav_item__VJwxW\",\"active\":\"app-header_active__1gFZ7\",\"text\":\"app-header_text__3DS8q\",\"logo\":\"app-header_logo__zVEfY\"};","import { TItem, TOrder } from '../../utils/types';\n\nexport const OPEN_MODAL: \"OPEN_MODAL\" = \"OPEN_MODAL\";\nexport const CLOSE_MODAL: \"CLOSE_MODAL\" = \"CLOSE_MODAL\";\nexport const OPEN_MODAL_ORDER: \"OPEN_MODAL_ORDER\" = \"OPEN_MODAL_ORDER\";\n\nexport interface IOpenModalAction {\n  readonly type: typeof OPEN_MODAL;\n  item: TItem\n};\nexport interface ICloseModalAction {\n  readonly type: typeof CLOSE_MODAL;\n}\n\nexport interface IOpenModalOrderAction {\n  readonly type: typeof OPEN_MODAL_ORDER;\n  item: TOrder\n};\n\nexport type TModalActions = \n  | IOpenModalAction\n  | IOpenModalOrderAction\n  | ICloseModalAction;","import { \n  TypedUseSelectorHook, \n  useDispatch as dispatchHook,\n  useSelector as selectorHook\n} from 'react-redux';\nimport type { TRootState, TAppDispatch, TAppThunk } from './types';\n\nexport const useSelector: TypedUseSelectorHook<TRootState> = selectorHook;\nexport const useDispatch = () => dispatchHook<TAppDispatch | TAppThunk>()","const BASE_URL = 'https://norma.nomoreparties.space/api';\nconst WEB_SOCKET = 'wss://norma.nomoreparties.space/orders';\nconst LOAD_ERROR = 'Во время запроса произошла ошибка. Возможно проблема с соединением сервера. Попробуйте позже.'\n\nexport { BASE_URL, LOAD_ERROR, WEB_SOCKET };","export function getCookie(name: string): string {\n  const matches = document.cookie.match(\n    new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\n  );\n  return matches ? decodeURIComponent(matches[1]) : '';\n}\n\nexport function setCookie(name: string, value: string | number | boolean | null, props?: any) {\n  props = {\n    path: \"/\",\n    ...props,\n  };\n  let exp = props.expires;\n  if (typeof exp == 'number' && exp) {\n    const d = new Date();\n    d.setTime(d.getTime() + exp * 1000);\n    exp = props.expires = d;\n  }\n  if (exp && exp.toUTCString) {\n    props.expires = exp.toUTCString();\n  }\n  value = (value === null) ? null : encodeURIComponent(value);\n  let updatedCookie = name + '=' + value;\n  for (const propName in props) {\n    updatedCookie += '; ' + propName;\n    const propValue = props[propName];\n    if (propValue !== true) {\n      updatedCookie += '=' + propValue;\n    }\n  }\n  document.cookie = updatedCookie;\n}\n\nexport function deleteCookie(name: string) {\n  setCookie(name, null, { expires: -1 });\n}","export function checkResponse(res: Response) {\n  if (res.ok) {\n    return res.json()\n  }\n  return Promise.reject(`Error ${res.status}`)\n};","import { BASE_URL } from '../../utils/constants';\nimport { setCookie} from '../../utils/cookie';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch, TAppThunk, TUser } from '../../utils/types';\n\nexport const REFRESH_TOKEN_REQUEST: \"REFRESH_TOKEN_REQUEST\" = \"REFRESH_TOKEN_REQUEST\";\nexport const REFRESH_TOKEN_SUCCESS: \"REFRESH_TOKEN_SUCCESS\" = \"REFRESH_TOKEN_SUCCESS\";\nexport const REFRESH_TOKEN_FAILED: \"REFRESH_TOKEN_FAILED\" = \"REFRESH_TOKEN_FAILED\";\n\nexport interface IRefreshTokenAction {\n  readonly type: typeof REFRESH_TOKEN_REQUEST;\n};\nexport interface IRefreshTokenSuccessAction {\n  readonly type: typeof REFRESH_TOKEN_SUCCESS;\n  accessToken?: string;\n  readonly user: TUser;\n}\nexport interface IRefreshTokenFailedAction {\n  readonly type: typeof REFRESH_TOKEN_FAILED;\n}\n\nexport type TRefreshTokenActions = \n  | IRefreshTokenAction\n  | IRefreshTokenSuccessAction\n  | IRefreshTokenFailedAction;\n\nfunction handleTokenError() {\n  return {\n    type: REFRESH_TOKEN_FAILED\n  }\n}\n\nexport const refreshToken: TAppThunk = () => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: REFRESH_TOKEN_REQUEST,\n    });\n    fetch(`${BASE_URL}/auth/token`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        token: localStorage.getItem(\"refreshToken\"),\n      }),\n    })\n    .then(checkResponse)\n      .then((res) => {\n        if (res && res.success) {\n          dispatch({\n            type: REFRESH_TOKEN_SUCCESS,\n            user: res.user\n          });\n          localStorage.setItem('refreshToken', res.refreshToken);\n          setCookie('accessToken', res.accessToken);\n        } else {\n          dispatch(handleTokenError());\n        }\n      })\n      .catch((err) => {\n        console.log(err)\n        dispatch(handleTokenError())\n      })\n  };\n}","import { BASE_URL } from '../../utils/constants';\nimport { getCookie } from '../../utils/cookie';\n// import { refreshToken } from './refresh-token';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch, TUser, TAppThunk } from '../../utils/types';\nimport { REFRESH_TOKEN_REQUEST, IRefreshTokenAction } from './refresh-token';\n\nexport const GET_USER_REQUEST: \"GET_USER_REQUEST\" = \"GET_USER_REQUEST\";\nexport const GET_USER_SUCCESS: \"GET_USER_SUCCESS\" = \"GET_USER_SUCCESS\";\nexport const GET_USER_FAILED: \"GET_USER_FAILED\" = \"GET_USER_FAILED\";\n\nexport interface IGetUserAction {\n  readonly type: typeof GET_USER_REQUEST;\n};\nexport interface IGetUserSuccessAction {\n  readonly type: typeof GET_USER_SUCCESS;\n  readonly user: TUser;\n}\nexport interface IGetUserFailedAction {\n  readonly type: typeof GET_USER_FAILED;\n}\n\nexport type TGetUserActions = \n  | IGetUserAction\n  | IGetUserSuccessAction\n  | IGetUserFailedAction;\n\nfunction handleUserError() {\n  return {\n    type: GET_USER_FAILED\n  }\n}\n\nexport const refreshToken = (): IRefreshTokenAction => ({\n    type: REFRESH_TOKEN_REQUEST\n})\n\nexport const getUserData = (): IGetUserAction => ({\n  type: GET_USER_REQUEST\n})\n\nexport const getUser: TAppThunk = () => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: GET_USER_REQUEST\n    })\n    fetch(`${BASE_URL}/auth/user`, {\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        Authorization: getCookie('accessToken') as string\n      },\n    })\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: GET_USER_SUCCESS,\n          user: res.user\n        })\n      } else {\n        dispatch(handleUserError())\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      if (err.message === \"jwt expired\" || err.message === \"Token is invalid\") {\n        dispatch(refreshToken())\n        dispatch(getUserData())\n      } else {\n        dispatch(handleUserError())\n      }\n    })\n  }\n}\n\n","import { useEffect, useState, FunctionComponent } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useSelector, useDispatch } from '../utils/hooks';\nimport { getUser } from '../services/actions/get-user';\n\nexport const ProtectedRoute: FunctionComponent<RouteProps> = ({children, ...rest }) => {\n  const [isUserLoaded, setUserLoaded] = useState<boolean>(false);\n  const auth = useSelector((store) => store.getUser.isAuthenticated);\n  const isLoggedIn = useSelector(store => store.login.isLoggedIn);\n  const dispatch = useDispatch();\n\n  const init = async () => {\n    await dispatch(getUser());\n    setUserLoaded(true);\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  if (!isUserLoaded) {\n    return null;\n  }\n\n    return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth || isLoggedIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n} ","import { BASE_URL } from '../../utils/constants';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch, TItem, TAppThunk } from '../../utils/types';\n\nexport const GET_INGREDIENTS_REQUEST: \"GET_INGREDIENTS_REQUEST\" = \"GET_INGREDIENTS_REQUEST\";\nexport const GET_INGREDIENTS_SUCCESS: \"GET_INGREDIENTS_SUCCESS\" = \"GET_INGREDIENTS_SUCCESS\";\nexport const GET_INGREDIENTS_FAILED: \"GET_INGREDIENTS_FAILED\" = \"GET_INGREDIENTS_FAILED\";\nexport const ADD_BUN: \"ADD_BUN\" = \"ADD_BUN\";\nexport const ADD_INNER_ITEM: \"ADD_INNER_ITEM\" = \"ADD_INNER_ITEM\";\nexport const REMOVE_INNER_ITEM: \"REMOVE_INNER_ITEM\" = \"REMOVE_INNER_ITEM\";\nexport const UPDATE_CONSTRUCTOR_LIST: \"UPDATE_CONSTRUCTOR_LIST\" = \"UPDATE_CONSTRUCTOR_LIST\";\nexport const RESET_CONSTRUSTOR: \"RESET_CONSTRUSTOR\" = \"RESET_CONSTRUSTOR\";\n\nexport interface IGetIngredientsAction {\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\n};\nexport interface IGetIngredientsSuccessAction {\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\n  foodData: Array<TItem>;\n}\nexport interface IGetIngredientsFailedAction {\n  readonly type: typeof GET_INGREDIENTS_FAILED;\n}\nexport interface IAddBunAction {\n  readonly type: typeof ADD_BUN;\n  bun: TItem;\n}\nexport interface IAddInnerItemAction {\n  readonly type: typeof ADD_INNER_ITEM;\n  item: TItem;\n}\nexport interface IRemoveInnerItemAction {\n  readonly type: typeof REMOVE_INNER_ITEM;\n  item: TItem;\n}\nexport interface IUpdateListAction {\n  readonly type: typeof UPDATE_CONSTRUCTOR_LIST;\n  updatedItems: Array<TItem>;\n}\nexport interface IResetListAction {\n  readonly type: typeof RESET_CONSTRUSTOR;\n  innerItems: Array<TItem>;\n}\n\nexport type TGetIngredientsActions = \n  | IGetIngredientsAction\n  | IGetIngredientsSuccessAction\n  | IGetIngredientsFailedAction\n  | IAddBunAction\n  | IAddInnerItemAction\n  | IRemoveInnerItemAction\n  | IUpdateListAction \n  | IResetListAction;\n\nfunction handleIngredientsError() {\n  return {\n    type: GET_INGREDIENTS_FAILED\n  }\n}\n\nexport const getIngredients: TAppThunk = () => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: GET_INGREDIENTS_REQUEST\n    })\n    fetch(`${BASE_URL}/ingredients`)\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: GET_INGREDIENTS_SUCCESS,\n          foodData: res.data\n        })\n      } else {\n        dispatch(handleIngredientsError())\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch(handleIngredientsError())\n    })\n  }\n}","import { FunctionComponent } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { BurgerIcon, ListIcon, ProfileIcon, Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport headerStyles from './app-header.module.css';\n\nconst Header: FunctionComponent = () => {\n  return (\n    <header className={`${headerStyles.header} text text_type_main-default pb-4 pt-4`}>\n      <div className={headerStyles.wrapper}>\n        <nav>\n          <ul className={headerStyles.nav}>\n            <li> \n              <NavLink \n                to=\"/\" \n                exact\n                className={`${headerStyles.nav_item} text_color_inactive pl-5 pr-5 mr-2`} \n                activeClassName={headerStyles.active}>\n              <BurgerIcon type=\"secondary\"/>\n              <p className={`${headerStyles.text} ml-2`}>Конструктор</p>\n            </NavLink></li>\n              <li>\n                <NavLink \n                to=\"/feed\" \n                exact\n                className={`${headerStyles.nav_item} text_color_inactive pl-5 pr-5`}\n                activeClassName={headerStyles.active}>\n              <ListIcon type=\"secondary\" />\n              <p className={`${headerStyles.text} ml-2`}>Лента заказов</p>\n              </NavLink></li>\n          </ul>\n        </nav>\n        <Link to=\"/\" className={headerStyles.logo}>\n          <Logo />\n        </Link>\n        <NavLink \n          to=\"/profile\" \n          className={`${headerStyles.nav_item} text_color_inactive pl-5 pr-5`}\n          activeClassName={headerStyles.active}>\n          <ProfileIcon type=\"secondary\" />\n          <p className={`${headerStyles.text} ml-2`}>Личный кабинет</p>\n        </NavLink>\n      </div>  \n    </header>\n  )\n}\n\nexport default Header;","import { BASE_URL } from '../../utils/constants';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch, TAppThunk, TOrder } from '../../utils/types';\nimport { getCookie } from '../../utils/cookie';\n\nexport const MAKE_ORDER_REQUEST: \"MAKE_ORDER_REQUEST\" = \"MAKE_ORDER_REQUEST\";\nexport const MAKE_ORDER_SUCCESS: \"MAKE_ORDER_SUCCESS\" = \"MAKE_ORDER_SUCCESS\";\nexport const MAKE_ORDER_FAILED: \"MAKE_ORDER_FAILED\" = \"MAKE_ORDER_FAILED\";\n\nexport const GET_ORDER_REQUEST: \"GET_ORDER_REQUEST\" = \"GET_ORDER_REQUEST\";\nexport const GET_ORDER_SUCCESS: \"GET_ORDER_SUCCESS\" = \"GET_ORDER_SUCCESS\";\nexport const GET_ORDER_FAILED: \"GET_ORDER_FAILED\" = \"GET_ORDER_FAILED\";\n\nexport interface IMakeOrderAction {\n  readonly type: typeof MAKE_ORDER_REQUEST;\n};\nexport interface IMakeOrderSuccessAction {\n  readonly type: typeof MAKE_ORDER_SUCCESS;\n  readonly number: number;\n}\nexport interface IMakeOrderFailedAction {\n  readonly type: typeof MAKE_ORDER_FAILED;\n}\n\nexport interface IGetOrderAction {\n  readonly type: typeof GET_ORDER_REQUEST;\n};\nexport interface IGetOrderSuccessAction {\n  readonly type: typeof GET_ORDER_SUCCESS;\n  readonly order: TOrder | {};\n}\nexport interface IGetOrderFailedAction {\n  readonly type: typeof GET_ORDER_FAILED;\n}\n\nexport type TMakeOrderActions = \n  | IMakeOrderAction\n  | IMakeOrderSuccessAction\n  | IMakeOrderFailedAction\n  | IGetOrderAction\n  | IGetOrderSuccessAction\n  | IGetOrderFailedAction;\n\nfunction handleMakeOrderError() {\n  return {\n    type: MAKE_ORDER_FAILED\n  }\n}\n\nfunction handleGetOrderError() {\n  return {\n    type: GET_ORDER_FAILED\n  }\n}\n\nexport const makeOrder: TAppThunk = (data: Array<string>) => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: MAKE_ORDER_REQUEST\n    })\n    fetch(`${BASE_URL}/orders`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ingredients: data\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: getCookie('accessToken') as string\n      },\n      \n    })\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: MAKE_ORDER_SUCCESS,\n          number: res.order.number\n        })\n      } else {\n        dispatch(handleMakeOrderError())\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch(handleMakeOrderError())\n    })\n  }\n}\n\nexport const getOrder: TAppThunk = (number: number) => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: GET_ORDER_REQUEST\n    })\n    fetch(`${BASE_URL}/orders/${number}`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: GET_ORDER_SUCCESS,\n          order: res.orders\n        })\n      } else {\n        dispatch(handleGetOrderError())\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch(handleGetOrderError())\n    })\n  }\n}","import { FunctionComponent, FormEvent } from 'react';\nimport overlayStyles from './modal-overlay.module.css';\n\ninterface IOverlay {\n  onClose: (e: FormEvent) => void,\n}\n\nconst ModalOverlay: FunctionComponent<IOverlay> = ({ onClose }) => {\n\n  return (\n    <div className={overlayStyles.overlay} onMouseDown={onClose}></div>\n  )\n}\n\n\nexport default ModalOverlay;","import { useEffect, FunctionComponent} from 'react';\nimport { createPortal } from 'react-dom';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport ModalOverlay from '../modal-overlay/modal-overlay';\nimport modalStyles from './modal.module.css';\n\nconst modalRoot = document.getElementById(\"react-modals\") as HTMLElement;\n\ninterface IModal {\n  onClose: () => void,\n  title: string\n}\n\nconst Modal: FunctionComponent<IModal> = ({onClose, title, children}) => {\n\n  function handleClick() {\n      onClose()\n  }\n\n  useEffect(() => {\n    function handleEscClose(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        console.log(e.target)\n        onClose();\n      }\n    }\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n    document.removeEventListener('keydown', handleEscClose);\n    }\n  }, [onClose]);\n\n  return createPortal(\n    <>\n    <ModalOverlay onClose={handleClick}/>\n    <div className={`${modalStyles.container} p-10`}>\n    <div className={modalStyles.header}>\n      <h2 className={`${modalStyles.title} text text_type_main-large`}>{title}</h2>\n      <div className={modalStyles.icon}>\n        <CloseIcon type=\"primary\" onClick={onClose}/>\n      </div>\n    </div>\n      {children}\n    </div>\n    </>, modalRoot\n  ) \n}\n\nexport default Modal;","export default __webpack_public_path__ + \"static/media/done-icon.fa386730.gif\";","import { FunctionComponent } from 'react';\nimport { useSelector } from '../../utils/hooks';\nimport { LOAD_ERROR } from '../../utils/constants';\nimport doneIcon from '../../images/done-icon.gif';\nimport orderStyles from './order-details.module.css';\n\nconst OrderDetails: FunctionComponent = () => {\n\n  const number = useSelector((store) => store.order.number);\n  const orderFailed = useSelector((store) => store.order.orderMakeFailed);\n\n  return (\n    <>\n      {orderFailed ? <p className={`${orderStyles.error} text text_type_main-medium pt-15`}>{LOAD_ERROR}</p> : (\n      <>\n        <span className={`${orderStyles.orderNumber} text text_type_digits-large`}>{number}\n          <p className={`${orderStyles.title} text text_type_main-medium mt-8`}>идентификатор заказа</p>\n        </span>\n        <img className={`mt-15 mb-15`} src={doneIcon} alt=\"Done\" />\n        <p className={`text text_type_main-default mb-2`}>Ваш заказ начали готовить</p>\n        <p className={`${orderStyles.status} text text_type_main-default text_color_inactive mb-15`}>Дождитесь готовности на орбитальной станции</p>\n      </>)} \n    </>\n  )\n}\n\nexport default OrderDetails;","import { useRef, FunctionComponent, SyntheticEvent } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDrop, useDrag, DropTargetMonitor } from 'react-dnd';\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDispatch } from '../../utils/hooks';\nimport { REMOVE_INNER_ITEM } from '../../services/actions/ingredients';\nimport { TItem } from '../../utils/types';\nimport itemStyles from './constructor-item.module.css';\n\ninterface IConstructorItem {\n  item: TItem,\n  index: number,\n  moveCard: (dragIndex: number, hoverIndex: number) => void\n}\n\ntype TDropItem = {\n  index: number,\n  id: string\n}\n\nconst ConstructorItem: FunctionComponent<IConstructorItem> = ({ item, index, moveCard }) => {\n\n  const ref = useRef<HTMLInputElement>(null);\n  const dispatch = useDispatch();\n\n  function deleteIngredient(item: TItem) {\n    dispatch({\n      type: REMOVE_INNER_ITEM,\n      item: item,\n      dragId: uuidv4()\n    })\n  }\n  \n    const [{ handlerId }, drop] = useDrop({\n    accept: 'component',\n    collect: (monitor: DropTargetMonitor) => ({\n      handlerId: monitor.getHandlerId()\n    }),\n    hover(item: TDropItem, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset && clientOffset.y - hoverBoundingRect.top;\n      if(dragIndex && hoverClientY) {\n        if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n          return;\n        } if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n          return;\n        }\n      }   \n      moveCard(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n  })\n\n  const [{ isDragging }, drag] = useDrag({\n    type: 'component',\n    item: () => ({ id: item._id, index }),\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const opacity = isDragging ? 0 : 1;\n\n  if (item.type !== 'bun') drag(drop(ref));\n  const preventDefault = (e: SyntheticEvent) => e.preventDefault();\n\n  return (\n  // <div ref={ref} style={{ opacity }} onDrop={preventDefault} data-handler-id={handlerId} className={itemStyles.food_item}>\n    <div ref={ref} style={{ opacity }} onDrop={preventDefault} data-handler-id={handlerId} className={itemStyles.food_item}> \n      <DragIcon type=\"primary\" />\n      <ConstructorElement\n        text={item.name}\n        price={item.price}\n        thumbnail={item.image}\n        handleClose={() => deleteIngredient(item)}\n      />\n    </div>\n  )\n}\n\nexport default ConstructorItem;","import { useState, useCallback, useMemo, FunctionComponent } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useHistory } from 'react-router-dom';\nimport { useDrop, DropTargetMonitor } from 'react-dnd';\nimport { makeOrder } from '../../services/actions/order';\nimport { ADD_BUN, RESET_CONSTRUSTOR, ADD_INNER_ITEM, UPDATE_CONSTRUCTOR_LIST } from '../../services/actions/ingredients';\nimport { TItem } from '../../utils/types';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { ConstructorElement, CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport constructorStyles from './burder-constructor.module.css';\nimport Modal from '../modal/modal';\nimport OrderDetails from '../order-details/order-details';\nimport ConstructorItem from '../constructor-item/constructor-item';\n\nconst BurgerConstructor: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { innerItems } = useSelector((store) => store.ingredients.constructor);\n  const { selectedBun } = useSelector((store: any) => store.ingredients.constructor);\n  const auth = useSelector((store) => store.login.isLoggedIn);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const allBurgerItems = useMemo(() => {\n      return selectedBun ? innerItems.concat([selectedBun, selectedBun]) : innerItems;\n  }, [innerItems, selectedBun]);\n\n  const [{ isHover }, dropTargerRef] = useDrop({\n    accept: 'ingredient',\n    collect: (monitor: DropTargetMonitor) => ({\n      isHover: monitor.isOver()\n    }),\n    drop(item: TItem) {\n      if (item.type === \"bun\") {\n        dispatch({\n          type: ADD_BUN,\n          bun: item\n        })\n      } else {\n        dispatch({\n          type: ADD_INNER_ITEM,\n          item: {\n            ...item,\n            dragId: uuidv4()\n          }\n        })\n      }\n    }\n  });\n\n  const moveCard = useCallback((dragIndex: number, hoverIndex: number) => {\n    const dragCard = innerItems[dragIndex];\n    const newCards = [...innerItems]\n    newCards.splice(dragIndex, 1)\n    newCards.splice(hoverIndex, 0, dragCard)\n    dispatch({\n      type: UPDATE_CONSTRUCTOR_LIST,\n      updatedItems: newCards,\n    })\n  }, [innerItems, dispatch]);\n\n  const totalPrice = allBurgerItems.reduce(\n    function (sum: number, item: TItem) {\n        return sum + item.price\n    }, 0\n  )\n  \n  function checkPrice(price: number) {\n    if (isNaN(price)) {\n      return 0\n    } else {\n      return price\n    }\n  }\n\n  function handleCloseModal() {\n    setIsOpen(!isOpen)\n    dispatch({\n      type: RESET_CONSTRUSTOR \n    })\n  }\n\n  function handleSubmit() {\n    const items = allBurgerItems.map((item: TItem) => item._id);\n    if (auth) {\n      dispatch(makeOrder(items))\n      setIsOpen(!isOpen)\n    } else {\n      history.replace({ pathname: \"/login\" });\n    }\n      \n  }\n\n  return (\n    <>\n    <div ref={dropTargerRef} className={`${constructorStyles.container} mt-15 pl-4 ${isHover ? constructorStyles.hover : ''}`}>\n      <div className={`${constructorStyles.wrapper} mb-10`}>\n        <div className={`pr-4`}>\n          {selectedBun.type &&(<ConstructorElement\n            type=\"top\"\n            isLocked={true}\n            text={`${selectedBun.name} (верх)`}\n            price={selectedBun.price}\n            thumbnail={selectedBun.image}\n          />)}\n        </div>\n        <div className={`${constructorStyles.food_list} pr-2`}>\n          {innerItems.map((item: TItem, i: any) => (\n            <ConstructorItem key={item.dragId} index={i} item={item} moveCard={moveCard}/>\n          ))}\n        </div>\n        <div className={`pr-4`}>\n          {selectedBun.type && (<ConstructorElement\n            type=\"bottom\"\n            isLocked={true}\n            text={`${selectedBun.name} (низ)`}\n            price={selectedBun.price}\n            thumbnail={selectedBun.image}\n          />)}\n        </div> \n      </div>\n      <div data-cy=\"submit\" className={`${constructorStyles.order} pr-4`}>\n        <span className={`${constructorStyles.price} text text_type_digits-medium mr-10`}>{checkPrice(totalPrice)} \n          <CurrencyIcon type=\"primary\" />\n        </span>\n        {selectedBun.type && <Button type=\"primary\" size=\"large\" onClick={handleSubmit}>\n          Оформить заказ \n        </Button>} \n      </div>\n    </div>\n    {isOpen && auth && (<Modal \n      title=\"\"\n      onClose={handleCloseModal}>\n        <OrderDetails />\n    </Modal>)}\n    </>\n  )\n}\n\nexport default BurgerConstructor;","import { FunctionComponent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useDrag } from 'react-dnd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { TItem } from '../../utils/types';\nimport { OPEN_MODAL } from '../../services/actions/modal';\nimport ingredientStyles from './ingredient.module.css';\n\ninterface IIngredient {\n  item: TItem\n}\n\nconst Ingredient: FunctionComponent<IIngredient> = ({item }) => {\n\n  const location = useLocation();\n  const dispatch = useDispatch();\n  \n  const ingredientId = item['_id'];\n  const [{ opacity }, dragRef] = useDrag({\n    type: 'ingredient',\n    item: { ...item },\n    collect: monitor => ({opacity: monitor.isDragging() ? 0.5 : 1\n    })\n  })\n\n  const handleOpenModal = () => {\n\n    dispatch({\n      type: OPEN_MODAL,\n      item\n    })\n  }\n\n  return (\n    <div id=\"ingredient\">\n    <Link\n      key={ingredientId}\n      to={{\n        // Тут мы формируем динамический путь для нашего ингредиента\n        // а также сохраняем в свойство background роут, на котором была открыта наша модалка.\n        pathname: `/ingredients/${ingredientId}`,\n        state: { background: location },\n      }}\n      className={ingredientStyles.link}\n    >\n      <div ref={dragRef} className={ingredientStyles.ingredient} style={{ opacity }} onClick={handleOpenModal}>\n        <img src={item.image} alt=\"Изображение продукта\"/>\n        <div className={`${ingredientStyles.price} mt-2 mb-2`}>\n          <p className={`text text_type_digits-default mr-2`}>{item.price}</p>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n        <h2 className={`${ingredientStyles.title} text text_type_main-default`}>{item.name}</h2>\n        <div className={ingredientStyles.count}> {item.count > 0 && <Counter  count={item.count} size=\"default\" />}</div>\n       \n      </div>\n    </Link>\n  </div>\n  )\n}\n\nexport default Ingredient;","import { useState, useRef, FunctionComponent } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { LOAD_ERROR } from '../../utils/constants';\nimport { useSelector } from '../../utils/hooks';\nimport { TItem } from '../../utils/types';\nimport Ingredient from '../ingredient/ingredient';\nimport ingredientsStyles from './burger-ingredients.module.css';\n\nconst BurgerIngredients: FunctionComponent = () => {\n\n  const data = useSelector((store) => store.ingredients.foodData);\n  const loadingFailed = useSelector((store) => store.ingredients.foodDataFailed);\n  const [current, setCurrent] = useState('buns');\n  const buns = data.filter((item: TItem) => item.type === 'bun');\n  const sauses = data.filter((item: TItem) => item.type === 'sauce');\n  const mains = data.filter((item: TItem) => item.type === 'main');\n\n  const bunsRef = useRef<HTMLInputElement>(null!);\n  const sausesRef = useRef<HTMLInputElement>(null!);\n  const mainsRef = useRef<HTMLInputElement>(null!);\n  const allRef = useRef<HTMLInputElement>(null!);\n\n  const handleScroll = () => {\n    const top = allRef.current.scrollTop + allRef.current.offsetTop;\n    \n    if (sausesRef.current.offsetTop > top) {\n      setCurrent(\"buns\");\n    } else if (mainsRef.current.offsetTop > top && top >= sausesRef.current.offsetTop) {\n      setCurrent(\"sauses\");\n    } else {\n      setCurrent(\"mains\");\n    }\n  };\n\n  const onTab = (selectedTab: any) => {\n    setCurrent(selectedTab);\n\n    if (selectedTab === \"buns\") {\n      bunsRef.current.scrollIntoView({ block: \"start\", behavior: \"smooth\"});\n    } else if (selectedTab === \"sauses\") {\n      sausesRef.current.scrollIntoView({ block: \"start\", behavior: \"smooth\"});\n    } else if (selectedTab === \"mains\") {\n      mainsRef.current.scrollIntoView({ block: \"start\", behavior: \"smooth\"});\n    }\n  }\n\n  return (\n    <div className={`mr-10`}>\n      <h1 className={`text text_type_main-large mb-5`}>Соберите бургер</h1>\n      <div style={{ display: 'flex' }}>\n        <Tab value=\"buns\" active={current === 'buns'} onClick={onTab}><Link className={ingredientsStyles.tab} to=\"#buns\">Булки</Link>\n        </Tab>\n        <Tab value=\"sauses\" active={current === 'sauses'} onClick={onTab}><Link className={ingredientsStyles.tab} to=\"#sauses\">Соусы</Link>\n        </Tab>\n        <Tab value=\"mains\" active={current === 'mains'} onClick={onTab}><Link className={ingredientsStyles.tab} to=\"#mains\">Начинки</Link>\n        </Tab>\n      </div>\n      {loadingFailed ? <p className={`${ingredientsStyles.error} text text_type_main-medium pt-15`}>{LOAD_ERROR}</p> : (<div className={ingredientsStyles.menu} onScroll={handleScroll} ref={allRef}>\n        <div className={`mt-10`} ref={bunsRef}>\n          <h2 className={`${ingredientsStyles.title} text text_type_main-medium`} id=\"buns\">Булки</h2>\n          <div className={`${ingredientsStyles.type} mr-2 ml-4 mt-6`}>\n            {buns.map((item: TItem) => (\n              <Ingredient item={item} key={item._id}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={`mt-10`} ref={sausesRef}>\n          <h2 className={`${ingredientsStyles.title} text text_type_main-medium`} id=\"sauses\">Соусы</h2>\n          <div className={`${ingredientsStyles.type} mr-2 ml-4 mt-6`}>\n            {sauses.map((item: TItem) => (\n              <Ingredient item={item} key={item._id}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={`mt-10`} ref={mainsRef}>\n          <h2 className={`${ingredientsStyles.title} text text_type_main-medium`} id=\"mains\">Начинки</h2>\n          <div className={`${ingredientsStyles.type} mr-2 ml-4 mt-6`}>\n            {mains.map((item: TItem) => (\n              <Ingredient item={item} key={item._id}\n              />\n            ))}\n          </div>\n        </div>\n      </div>)}\n    </div>\n  )\n}\n\nexport default BurgerIngredients;","import { FunctionComponent } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport mainStyles from './main.module.css';\nimport BurgerConstructor from '../burder-constructor/burder-constructor';\nimport BurgerIngredients from '../burger-ingredients/burger-ingredients';\n\nconst Main: FunctionComponent = () => {\n  \n  return (\n    <section className={`${mainStyles.main} pl-5 pr-5 pb-10 pt-10`}>\n      <DndProvider backend={HTML5Backend}>\n        <BurgerIngredients />\n        <BurgerConstructor />\n      </DndProvider>\n    </section>\n  )\n}\n\nexport default Main;","import { BASE_URL } from '../../utils/constants';\nimport { setCookie } from '../../utils/cookie';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch } from '../../utils/types';\nimport { TUserLogin, TAppThunk } from '../../utils/types';\n\nexport const LOGIN_USER_REQUEST: \"LOGIN_USER_REQUEST\" = \"LOGIN_USER_REQUEST\";\nexport const LOGIN_USER_SUCCESS: \"LOGIN_USER_SUCCESS\" = \"LOGIN_USER_SUCCESS\";\nexport const LOGIN_USER_FAILED: \"LOGIN_USER_FAILED\" = \"LOGIN_USER_FAILED\";\n\nexport interface ILoginUserAction {\n  readonly type: typeof LOGIN_USER_REQUEST;\n};\nexport interface ILoginUserSuccessAction {\n  readonly type: typeof LOGIN_USER_SUCCESS;\n  user: TUserLogin;\n}\nexport interface ILoginUserFailedAction {\n  readonly type: typeof LOGIN_USER_FAILED;\n}\n\nexport type TLoginUserActions = \n  | ILoginUserAction\n  | ILoginUserSuccessAction\n  | ILoginUserFailedAction;\n\nfunction handleLoginError() {\n  return {\n    type: LOGIN_USER_FAILED\n  }\n}\n\nexport const loginUser: TAppThunk = (data: TUserLogin) => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: LOGIN_USER_REQUEST\n    })\n    fetch(`${BASE_URL}/auth/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: data.email, \n        password: data.password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n    })\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: LOGIN_USER_SUCCESS,\n          user: res.user\n        })\n        setCookie('accessToken', res.accessToken)\n        localStorage.setItem('refreshToken', res.refreshToken)\n      } else {\n        dispatch(handleLoginError())\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch(handleLoginError())\n    })\n  }\n}","import { FunctionComponent, ReactNode, FormEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport userStyles from './user-form.module.css';\n\ninterface IUserFormProps {\n  title: string,\n  onSubmit: (e: FormEvent) => void,\n  children: ReactNode | \"\",\n  buttonName: string,\n  message: string,\n  link: string,\n  linkName: string\n}\n\nconst UserForm: FunctionComponent<IUserFormProps> = ({title, onSubmit, children, buttonName, message, link, linkName}) => {\n\n  return (\n    <form \n      className={userStyles.form} \n      name=\"user-entry\" \n      onSubmit={onSubmit}>\n        <h1 className={`${userStyles.title} text text_type_main-medium mb-6`}>{title}</h1>\n        <div className={userStyles.container}>\n          {children}\n        </div>\n        <div className={`mb-20`}>\n          <Button type=\"primary\" size=\"medium\">\n            {buttonName}\n          </Button>\n        </div>\n        <p className={`text text_type_main-default text_color_inactive`}>\n        {message} \n        <Link to={link} className={`text text_type_main-default`}>\n          {linkName}\n        </Link>\n      </p>\n    </form>\n  )\n};\n\nexport default UserForm;","export default __webpack_public_path__ + \"static/media/eye.e9decb34.svg\";","export default __webpack_public_path__ + \"static/media/eye-off.6d12db2b.svg\";","import styles from './input.module.css';\nimport React, { FunctionComponent } from 'react';\n\nexport type TInputProps = {\n  onIconClick?: () => void;\n  icon?: React.ElementType;\n  label: string;\n} & React.InputHTMLAttributes<HTMLInputElement>;\n\nconst Input: FunctionComponent<TInputProps> = ({\n  icon: Icon,\n  onIconClick,\n  value,\n  label,\n  onChange,\n  name,\n  type,\n  ...props\n}) => {\n  const icon = Icon ? <Icon onClick={onIconClick} /> : null;\n  return (\n    <div className={styles.input_container}>\n      <label className={`${styles.input_placeholder} noselect text text_type_main-default`}>{label}</label>\n      <input\n        className={`${styles.input} pr-6 pl-6 text text_type_main-default`} \n        name={name} \n        type={type}\n        value={value || \"\"}\n        onChange={onChange}\n        {...props}\n      />\n      {icon}\n    </div>\n  );\n};\n\nexport default Input;","import { FunctionComponent, useState } from 'react';\nimport { TInputProps } from './input';\nimport styles from './input.module.css';\nimport eye from '../images/eye.svg';\nimport eyeOff from '../images/eye-off.svg'\nimport Input from './input';\n\nconst EyeOff: FunctionComponent<{ onClick: () => void }> = props => (\n  <img src={eyeOff} className={styles.icon} onClick={props.onClick} alt=\"Eye\" />\n);\nconst Eye: FunctionComponent<{ onClick: () => void }> = props => (\n  <img src={eye} className={styles.icon} onClick={props.onClick} alt=\"Eye off\" />\n);\n\nconst PasswordInput: FunctionComponent<TInputProps> = ({type, ...props}) => {\n\n  const [isVisible, setVisible] = useState(false); \n\n  return (\n    <Input \n      {...props}\n      type={isVisible ? 'text' : 'password'}\n      icon={isVisible ? EyeOff : Eye}\n      onIconClick={() => setVisible(!isVisible)}\n      required={false}\n    />\n  )\n}\n\nexport default PasswordInput;","export default __webpack_public_path__ + \"static/media/edit.00f98e7a.svg\";","import { FunctionComponent, useState } from 'react';\nimport { TInputProps } from './input';\nimport Input from './input';\nimport edit from '../images/edit.svg';\nimport styles from './input.module.css';\n\nconst Edit: FunctionComponent<{ onClick: () => void }> = props => (\n  <img src={edit} className={styles.icon} onClick={props.onClick} alt=\"edit\" />\n);\n\nconst EmailInput: FunctionComponent<TInputProps> = ({type, ...props}) => {\n\n  const [disabled, setDisabled] = useState(true); \n\n  return (\n    <Input \n      {...props}\n      type={'email'}\n      icon={Edit}\n      onIconClick={() => setDisabled(false)}\n      disabled={disabled}\n    />\n  )\n}\n\nexport default EmailInput;","import { useState, useCallback, ChangeEvent, FunctionComponent } from 'react';\nimport { Link, Redirect, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { loginUser } from '../../services/actions/login';\nimport { TUser, TLocationState } from '../../utils/types';\nimport UserForm from '../user-form/user-form';\nimport loginStyles from './login.module.css';\nimport PasswordInput from '../../ui-elements/password-input';\nimport EmailInput from '../../ui-elements/email-input';\n\nconst Login: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { state } = location as TLocationState;\n  const isLoggedIn = useSelector(store => store.login.isLoggedIn);\n  const auth = useSelector((store) => store.getUser.isAuthenticated);\n  const [form, setForm] = useState<TUser>({} as TUser);\n  // const [form, setForm] = useState({ \n  //   email: '', \n  //   password: '' \n  // });\n\n  let submit = useCallback(\n    e => {\n      e.preventDefault()\n      dispatch(loginUser(form))\n    },\n    [dispatch, form]\n  )\n  \n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n      const value = e.target.value;\n      const name = e.target.name;\n  \n      setForm({\n        ...form,\n        [name]: value\n      })\n    }\n  \n    if (isLoggedIn || auth) {\n      return (\n        <Redirect\n          to={ state?.from || '/' }\n        />\n      );\n    }\n\n  return (\n    <section className={loginStyles.login}>\n      <UserForm\n        title=\"Вход\"\n        onSubmit={submit}\n        buttonName=\"Войти\"\n        message=\"Вы — новый пользователь? \" \n        link=\"/register\" \n        linkName=\"Зарегистрироваться\"\n      >\n        <div className={`mb-6`}>\n          <EmailInput \n            name='email'\n            label='Email'\n            onChange={handleInputChange} \n            value={form.email} \n          />\n        </div> \n        <div className={`mb-6`}>\n          <PasswordInput \n            name='password'\n            label='Password' \n            value={form.password} \n            onChange={handleInputChange} \n          />\n        </div>\n      </UserForm>\n      <p className={`text text_type_main-default text_color_inactive mt-4`}>\n        {\"Забыли пароль? \"}\n        <Link to=\"/forgot-password\" className={`text text_type_main-default`}>\n        Восстановить пароль\n        </Link>\n      </p>\n    </section>\n  )\n}\n\nexport default Login;","import { BASE_URL } from '../../utils/constants';\nimport { setCookie} from '../../utils/cookie';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch } from '../../utils/types';\nimport { TUserMain, TAppThunk} from '../../utils/types';\n\nexport const REGISTER_USER_REQUEST: \"REGISTER_USER_REQUEST\" = \"REGISTER_USER_REQUEST\";\nexport const REGISTER_USER_SUCCESS: \"REGISTER_USER_SUCCESS\" = \"REGISTER_USER_SUCCESS\";\nexport const REGISTER_USER_FAILED: \"REGISTER_USER_FAILED\" = \"REGISTER_USER_FAILED\";\n\nexport interface IRegisterUserAction {\n  readonly type: typeof REGISTER_USER_REQUEST;\n};\nexport interface IRegisterUserSuccessAction {\n  readonly type: typeof REGISTER_USER_SUCCESS;\n  user: TUserMain;\n}\nexport interface IRegisterUserFailedAction {\n  readonly type: typeof REGISTER_USER_FAILED;\n}\n\nexport type TRegisterUserActions = \n  | IRegisterUserAction\n  | IRegisterUserSuccessAction\n  | IRegisterUserFailedAction;\n\nfunction handleRegisterError() {\n  return {\n    type: REGISTER_USER_FAILED\n  }\n}\n\nexport const registerUser: TAppThunk = (data: TUserMain) => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    })\n    fetch(`${BASE_URL}/auth/register`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.name,\n        email: data.email, \n        password: data.password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n    })\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: REGISTER_USER_SUCCESS,\n          user: res.user\n        })\n        setCookie('accessToken', res.accessToken)\n        localStorage.setItem('refreshToken', res.refreshToken)\n      } else {\n        dispatch(handleRegisterError())\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch(handleRegisterError())\n    })\n  }\n};","import { useState, useCallback, ChangeEvent, FunctionComponent } from 'react';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { registerUser } from '../../services/actions/register';\nimport { Redirect } from 'react-router-dom';\nimport { TUserMain } from '../../utils/types';\nimport UserForm from '../user-form/user-form';\nimport registerStyles from './register.module.css';\nimport Input from '../../ui-elements/input';\nimport PasswordInput from '../../ui-elements/password-input';\nimport EmailInput from '../../ui-elements/email-input';\n\nconst Register: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n  const auth = useSelector((store) => store.register.isAuthenticated)\n  const [state, setState] = useState<TUserMain>({} as TUserMain);\n\n  let submit = useCallback(\n    e => {\n      e.preventDefault()\n      dispatch(registerUser(state))\n    },\n    [dispatch, state]\n  )\n  \n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n      const value = e.target.value;\n      const name = e.target.name;\n  \n      setState({\n        ...state,\n        [name]: value\n      })\n    }\n  \n    if (auth) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/'\n          }}\n        />\n      );\n    }\n\n  return (\n    <section className={registerStyles.register}>\n      <UserForm\n        title=\"Регистрация\"\n        onSubmit={submit}\n        buttonName=\"Зарегистрироваться\"\n        message=\"Уже зарегистрированы? \" \n        link=\"/login\" \n        linkName=\"Войти\"\n      >\n        <div className={`mb-6`}>\n          <Input\n            name='name'\n            label='Имя'\n            value={state.name}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className={`mb-6`}>\n          <EmailInput \n            name='email'\n            label='Email'\n            value={state.email}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className={`mb-6`}>\n          <PasswordInput\n            name='password'\n            label='Password'\n            value={state.password}\n            onChange={handleInputChange}\n          />\n        </div>\n      </UserForm>\n    </section>\n  )\n}\n\nexport default Register;","import { BASE_URL } from '../../utils/constants';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch, TAppThunk } from '../../utils/types';\n\nexport const FORGOT_PASSWORD_REQUEST: \"FORGOT_PASSWORD_REQUEST\" = \"FORGOT_PASSWORD_REQUEST\";\nexport const FORGOT_PASSWORD_SUCCESS: \"FORGOT_PASSWORD_SUCCESS\" = \"FORGOT_PASSWORD_SUCCESS\";\nexport const FORGOT_PASSWORD_FAILED: \"FORGOT_PASSWORD_FAILED\" = \"FORGOT_PASSWORD_FAILED\";\n\nexport interface IForgotPassAction {\n  readonly type: typeof FORGOT_PASSWORD_REQUEST;\n};\nexport interface IForgotPassSuccessAction {\n  readonly type: typeof FORGOT_PASSWORD_SUCCESS;\n}\nexport interface IForgotPassFailedAction {\n  readonly type: typeof FORGOT_PASSWORD_FAILED;\n}\n\nexport type TForgotPassActions = \n  | IForgotPassAction\n  | IForgotPassSuccessAction\n  | IForgotPassFailedAction;\n\nfunction handlePassError() {\n  return {\n    type: FORGOT_PASSWORD_FAILED\n  }\n}\n\nexport const forgotPass: TAppThunk = (email: string) => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: FORGOT_PASSWORD_REQUEST\n    })\n    fetch(`${BASE_URL}/password-reset`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: email\n      }),\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n    })\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: FORGOT_PASSWORD_SUCCESS\n        })\n        console.log(res)\n      } else {\n        dispatch(handlePassError())\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch(handlePassError())\n    })\n  }\n}","import { useState, useCallback, ChangeEvent, FunctionComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { forgotPass } from '../../services/actions/forgot-pass';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport UserForm from '../user-form/user-form';\nimport forgotStyles from './forgot-password.module.css';\nimport EmailInput from '../../ui-elements/email-input';\n\nconst ForgotPassword: FunctionComponent = () => {\n\n  const [email, setEmail] = useState<string>(\"\")\n  const dispatch = useDispatch();\n  const emailSent = useSelector((state) => state.forgot.isEmailSent)\n\n  let submit = useCallback(\n    e => {\n      e.preventDefault()\n      dispatch(forgotPass(email))\n    },\n    [dispatch, email]\n  )\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setEmail(e.target.value)\n  }\n\n  if (emailSent) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/reset-password'\n        }}\n      />\n    );\n  }  \n\n  return (\n    <section className={forgotStyles.forgot}>\n      <UserForm\n        title=\"Восстановление пароля\"\n        onSubmit={submit}\n        buttonName=\"Восстановить\"\n        message=\"Вспомнили пароль? \" \n        link=\"/login\" \n        linkName=\"Войти\"\n      >\n        <div className={`mb-6`}>\n          <EmailInput\n            name={'email'}\n            label={'Укажите e-mail'}\n            value={email}\n            onChange={handleInputChange}\n          />\n        </div> \n      </UserForm>\n    </section>\n  )\n}\n\nexport default ForgotPassword;","import { BASE_URL } from '../../utils/constants';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch, TUserReset, TAppThunk } from '../../utils/types';\n\nexport const RESET_PASSWORD_REQUEST: \"RESET_PASSWORD_REQUEST\" = \"RESET_PASSWORD_REQUEST\";\nexport const RESET_PASSWORD_SUCCESS: \"RESET_PASSWORD_SUCCESS\" = \"RESET_PASSWORD_SUCCESS\";\nexport const RESET_PASSWORD_FAILED: \"RESET_PASSWORD_FAILED\" = \"RESET_PASSWORD_FAILED\";\n\nexport interface IResetPassAction {\n  readonly type: typeof RESET_PASSWORD_REQUEST;\n};\nexport interface IResetPassSuccessAction {\n  readonly type: typeof RESET_PASSWORD_SUCCESS;\n}\nexport interface IResetPassFailedAction {\n  readonly type: typeof RESET_PASSWORD_FAILED;\n}\n\nexport type TResetPassActions = \n  | IResetPassAction\n  | IResetPassSuccessAction\n  | IResetPassFailedAction;\n\nfunction handleResetError() {\n  return {\n    type: RESET_PASSWORD_FAILED\n  }\n}\n\nexport const resetPass: TAppThunk = (data: TUserReset) => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: RESET_PASSWORD_REQUEST\n    })\n    fetch(`${BASE_URL}/password-reset/reset`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        password: data.password,\n        token: data.token\n      }),\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n    })\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: RESET_PASSWORD_SUCCESS\n        })\n        console.log(res)\n      } else {\n        dispatch(handleResetError())\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch(handleResetError())\n    })\n  }\n}","import { useState, useCallback, ChangeEvent, FunctionComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { resetPass } from '../../services/actions/reset-pass';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { TUserReset } from '../../utils/types';\nimport UserForm from '../user-form/user-form';\nimport resetStyles from './reset-password.module.css';\nimport Input from '../../ui-elements/input';\nimport PasswordInput from '../../ui-elements/password-input';\n\nconst ResetPassword: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n  const passwordReset = useSelector((store) => store.reset.isPasswordReset);\n  const [state, setState] = useState<TUserReset>({} as TUserReset);\n\n  let submit = useCallback(\n    e => {\n      e.preventDefault()\n      dispatch(resetPass(state))\n    },\n    [dispatch, state]\n  )\n  \n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n      const value = e.target.value;\n      const name = e.target.name;\n  \n      setState({\n        ...state,\n        [name]: value\n      })\n    }\n  \n    if (passwordReset) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/login'\n          }}\n        />\n      );\n    }  \n\n  return (\n    <section className={resetStyles.reset}>\n      <UserForm\n        title=\"Восстановление пароля\"\n        onSubmit={submit}\n        buttonName=\"Сохранить\"\n        message=\"Вспомнили пароль? \" \n        link=\"/login\" \n        linkName=\"Войти\"\n      >\n        <div className={`mb-6`}>\n          <PasswordInput\n            name={'password'}\n            label={'Введите новый пароль'}\n            value={state.password}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className={`mb-6`}>\n          <Input\n            name={'token'}\n            label={'Введите код из письма'}\n            onChange={handleInputChange}\n            value={state.token}\n          />\n        </div> \n      </UserForm>\n    </section>\n  )\n}\n\nexport default ResetPassword;","import { BASE_URL } from '../../utils/constants';\nimport { getCookie } from '../../utils/cookie';\nimport { refreshToken } from './refresh-token';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch } from '../../utils/types';\nimport { TUserMain, TAppThunk } from '../../utils/types';\n\nexport const PATCH_USER_REQUEST: \"PATCH_USER_REQUEST\" = \"PATCH_USER_REQUEST\";\nexport const PATCH_USER_SUCCESS: \"PATCH_USER_SUCCESS\" = \"PATCH_USER_SUCCESS\";\nexport const PATCH_USER_FAILED: \"PATCH_USER_FAILED\" = \"PATCH_USER_FAILED\";\n\nexport interface IPatchUserAction {\n  readonly type: typeof PATCH_USER_REQUEST;\n};\nexport interface IPatchUserSuccessAction {\n  readonly type: typeof PATCH_USER_SUCCESS;\n  user: TUserMain;\n}\nexport interface IPatchUserFailedAction {\n  readonly type: typeof PATCH_USER_FAILED;\n}\n\nexport type TPatchUserActions = \n  | IPatchUserAction\n  | IPatchUserSuccessAction\n  | IPatchUserFailedAction;\n\nfunction handlePatchError() {\n  return {\n    type: PATCH_USER_FAILED\n  }\n}\n\nexport const patchUser: TAppThunk = (data: TUserMain) => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: PATCH_USER_REQUEST\n    })\n    fetch(`${BASE_URL}/auth/user`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: data.name,\n        email: data.email, \n        password: data.password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        authorization: getCookie('accessToken') as string\n      },\n    })\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: PATCH_USER_SUCCESS,\n          user: res.user\n        })\n      } else {\n        dispatch(handlePatchError())\n      }\n    })\n    .catch((err) => {\n      console.log(err.message)\n      if (err.message === \"jwt expired\" || err.message === \"Token is invalid\") {\n        dispatch(handlePatchError())\n        // dispatch(refreshToken())\n        // dispatch(patchUser(data))\n      }\n    })\n  }\n}","import { BASE_URL } from '../../utils/constants';\nimport { deleteCookie } from '../../utils/cookie';\nimport { checkResponse } from '../../utils/check-response';\nimport { TAppDispatch, TAppThunk } from '../../utils/types';\n\nexport const LOGOUT_REQUEST: \"LOGOUT_REQUEST\" = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\" = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILED: \"LOGOUT_FAILED\" = \"LOGOUT_FAILED\";\n\nexport interface ILogoutUserAction {\n  readonly type: typeof LOGOUT_REQUEST;\n};\nexport interface ILogoutUserSuccessAction {\n  readonly type: typeof LOGOUT_SUCCESS;\n}\nexport interface ILogoutUserFailedAction {\n  readonly type: typeof LOGOUT_FAILED;\n}\n\nexport type TLogoutUserActions = \n  | ILogoutUserAction\n  | ILogoutUserSuccessAction\n  | ILogoutUserFailedAction;\n\nfunction handleLogoutError() {\n  return {\n    type: LOGOUT_FAILED\n  }\n}\n\nexport const logoutUser: TAppThunk = () => {\n  return function (dispatch: TAppDispatch) {\n    dispatch({\n      type: LOGOUT_REQUEST\n    })\n    fetch(`${BASE_URL}/auth/logout`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        token: localStorage.getItem('refreshToken'),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n    })\n    .then(checkResponse)\n    .then((res) => {\n      if (res && res.success) {\n        dispatch({\n          type: LOGOUT_SUCCESS,\n        })\n        deleteCookie('accessToken')\n        localStorage.removeItem('refreshToken')\n      } else {\n        dispatch(handleLogoutError())\n      }\n    })\n    .catch((err) => {\n      console.log(err)\n      dispatch(handleLogoutError())\n    })\n  }\n}","import { FunctionComponent } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { useDispatch } from '../../utils/hooks';\nimport { logoutUser } from '../../services/actions/logout';\nimport profileMenuStyles from './profile-menu.module.css';\n\nconst ProfileMenu: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n\n  const onSignOut = () => {\n    dispatch(logoutUser())\n  }\n\n  return (\n    <nav className={`mt-20`}>\n      <ul className={profileMenuStyles.nav}>\n        <li>\n          <NavLink \n            to={{pathname: \"/profile\" }}\n            exact\n            className={`${profileMenuStyles.nav_item} text_type_main-medium text_color_inactive pl-5 pr-5 mr-2`} \n            activeClassName={profileMenuStyles.active}>Профиль\n          </NavLink>\n        </li>\n        <li>\n          <NavLink \n            to={{pathname: \"/profile/orders\" }}\n            exact \n            className={`${profileMenuStyles.nav_item} text_type_main-medium text_color_inactive pl-5 pr-5 mr-2`} \n            activeClassName={profileMenuStyles.active}>История заказов\n          </NavLink>\n        </li>\n        <li>\n          <Link \n            to={{pathname: \"/login\" }}\n            className={`${profileMenuStyles.nav_item} text_type_main-medium text_color_inactive pl-5 pr-5 mr-2`} \n            onClick={onSignOut}>Выход\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default ProfileMenu;","import { useEffect, useState, FormEvent, ChangeEvent, FunctionComponent } from 'react';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { patchUser } from '../../services/actions/patch-user';\nimport { getUser } from '../../services/actions/get-user';\nimport { TUserMain } from '../../utils/types';\nimport profileStyles from './profile.module.css';\nimport ProfileMenu from '../profile-menu/profile-menu';\nimport Input from '../../ui-elements/input';\nimport PasswordInput from '../../ui-elements/password-input';\nimport EmailInput from '../../ui-elements/email-input';\n\nconst Profile: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.getUser.user);\n  // const loginUser = \n  const isSuccess = useSelector((state) => state.patchUser.isSuccess);\n  const [isEdit, setIsEdit] = useState<boolean>(false);\n  const [state, setState] = useState<TUserMain>({} as TUserMain);\n\n  useEffect(() => {\n    dispatch(getUser())\n    setState(user)\n  }, [])\n\n  const onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    if (isEdit) {\n      dispatch(patchUser(state))\n    }\n  }\n  \n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n      const value = e.target.value;\n      const name = e.target.name;\n  \n      setState({\n        ...state,\n        [name]: value\n      })\n      setIsEdit(true)\n    }\n\n  const onReset = (e: FormEvent) => {\n    e.preventDefault()\n    setState({\n      ...state,\n      name: user.name,\n      email: user.email,\n      password: \"\"\n    })\n  }\n\n  return (\n    <section className={`${profileStyles.profile} pt-10`}>\n      <ProfileMenu />\n      <form className={`${profileStyles.inputs} mt-20`} onSubmit={onSubmit}>\n        <div className={`mb-6`}>\n          <Input\n            name='name'\n            label='Имя'\n            value={state.name || user.name}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className={`mb-6`}>\n          <EmailInput \n            name='email'\n            label='Email'\n            value={state.email || user.email}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className={`mb-6`}>\n          <PasswordInput\n            name='password'\n            label='Password'\n            value={state.password}\n            onChange={handleInputChange}\n          />\n        </div>\n        {isSuccess && <p>Данные успешно обновлены</p>}\n        <div className={isEdit ? profileStyles.buttons : profileStyles.invisible}>\n          <Button type=\"secondary\" size=\"medium\" onClick={onReset}>\n            Отмена\n          </Button>\n          <Button type=\"primary\" size=\"medium\">\n            Сохранить\n          </Button>\n        </div>\n      </form>\n      <p className={`${profileStyles.text} text_type_main-default text_color_inactive`} >\n        В этом разделе вы можете изменить свои персональные данные\n      </p>\n    </section>\n  )\n}\n\nexport default Profile;","import { FunctionComponent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from '../../utils/hooks';\nimport { TItem } from '../../utils/types';\nimport ingredientStyles from './ingredient-details.module.css';\n\nconst IngredientsDetails: FunctionComponent = () => {\n\n  const { ingredientId } = useParams<{ingredientId: string}>();\n  const allItems = useSelector((store) => store.ingredients.foodData);\n  const selectedItem = useSelector((store: any) => store.modal.selectedItem);\n  const ingredient = allItems.find((c: TItem) => c._id === ingredientId);\n\n  const item = ingredient || selectedItem;\n\n  return (\n    <div className={ingredientStyles.container}>\n      <img src={item.image_large} alt={item.name}/>\n      <h2 className={`text text_type_main-medium mt-4 mb-8`}>{item.name}</h2>\n      <ul className={`${ingredientStyles.list} text text_type_main-default text_color_inactive`}>\n        <li>\n          <h3 className={ingredientStyles.listItem}>Калории, ккал</h3>\n          <p className={`text text_type_digits-default mt-2`}>{item.calories}</p>\n        </li>\n        <li>\n          <h3 className={ingredientStyles.listItem}>Белки, г</h3>\n          <p className={`text text_type_digits-default mt-2`}>{item.proteins}</p>\n        </li>\n        <li>\n          <h3 className={ingredientStyles.listItem}>Жиры, г</h3>\n          <p className={`text text_type_digits-default mt-2`}>{item.fat}</p>\n        </li>\n        <li>\n          <h3 className={ingredientStyles.listItem}>Углеводы, г</h3>\n          <p className={`text text_type_digits-default mt-2`}>{item.carbohydrates}</p>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default IngredientsDetails;","import { FunctionComponent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from '../../utils/hooks';\nimport { TItem } from '../../utils/types';\nimport ingredientPageStyles from './ingredient-page.module.css';\nimport ingredientStyles from '../../components/ingredient-details/ingredient-details.module.css';\n\nconst IngredientPage: FunctionComponent = () => {\n\n  const { ingredientId } = useParams<{ingredientId: string}>();\n  const allItems = useSelector((store) => store.ingredients.foodData);\n  const ingredient = allItems.find((c: TItem) => c._id === ingredientId);\n\n  return (\n    <>\n    {ingredient ? (\n      <section className={ingredientPageStyles.main}>\n        <h2 className={`text text_type_main-large mb-8`}>Детали ингредиента</h2>\n        <div className={ingredientStyles.container} key={ingredient._id}>\n          <img src={ingredient.image_large} alt={ingredient.name}/>\n          <h2 className={`text text_type_main-medium mt-4 mb-8`}>{ingredient.name}</h2>\n          <ul className={`${ingredientStyles.list} text text_type_main-default text_color_inactive`}>\n            <li>\n              <h3 className={ingredientStyles.listItem}>Калории, ккал</h3>\n              <p className={`text text_type_digits-default mt-2`}>{ingredient.calories}</p>\n            </li>\n            <li>\n              <h3 className={ingredientStyles.listItem}>Белки, г</h3>\n              <p className={`text text_type_digits-default mt-2`}>{ingredient.proteins}</p>\n            </li>\n            <li>\n              <h3 className={ingredientStyles.listItem}>Жиры, г</h3>\n              <p className={`text text_type_digits-default mt-2`}>{ingredient.fat}</p>\n            </li>\n            <li>\n              <h3 className={ingredientStyles.listItem}>Углеводы, г</h3>\n              <p className={`text text_type_digits-default mt-2`}>{ingredient.carbohydrates}</p>\n            </li>\n          </ul>\n        </div>\n      </section>\n    ) : null}\n    </> \n  )\n}\n\nexport default IngredientPage;","export const sayDate = (date: string): string => {\n  const orderDate = new Date(date).setHours(0, 0, 0, 0);\n  const currentDate = new Date().setHours(0, 0, 0, 0);\n  let day = new Date(orderDate).toLocaleDateString(\"ru-RU\", {});\n  if (orderDate === currentDate) {\n    day = \"Сегодня\";\n  } else if (currentDate - orderDate == 24 * 60 * 60 * 1000) {\n    day = \"Вчера\";\n  } else if (currentDate - orderDate == -24 * 60 * 60 * 1000) {\n    day = \"Завтра\";\n  }\n  const time = new Date(date).toLocaleTimeString(\"ru-Ru\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    timeZoneName: \"short\",\n  });\n  return `${day}, ${time}`;\n};","import { TOrders } from '../../utils/types';\n\nexport const WS_CONNECTION_START: \"WS_CONNECTION_START\" = \"WS_CONNECTION_START\";\nexport const WS_CONNECTION_CLOSE: \"WS_CONNECTION_CLOSE\" = \"WS_CONNECTION_CLOSE\";\nexport const WS_CONNECTION_SUCCESS: \"WS_CONNECTION_SUCCESS\" = \"WS_CONNECTION_SUCCESS\";\nexport const WS_CONNECTION_ERROR: \"WS_CONNECTION_ERROR\" = \"WS_CONNECTION_ERROR\";\nexport const WS_CONNECTION_CLOSED: \"WS_CONNECTION_CLOSED\" = \"WS_CONNECTION_CLOSED\";\nexport const WS_GET_MESSAGE: \"WS_GET_MESSAGE\" = \"WS_GET_MESSAGE\";\nexport const WS_SEND_MESSAGE: \"WS_SEND_MESSAGE\" = \"WS_SEND_MESSAGE\";\n\nexport const wsActions = {\n  wsStart: WS_CONNECTION_START,\n  wsClose: WS_CONNECTION_CLOSE,\n  onOpen: WS_CONNECTION_SUCCESS,\n  onClose: WS_CONNECTION_CLOSED,\n  onError: WS_CONNECTION_ERROR,\n  onMessage: WS_GET_MESSAGE,\n};\n\nexport interface IWsConnectionStartAction {\n  readonly type: typeof WS_CONNECTION_START;\n  readonly payload: string;\n}\n\nexport interface IWsConnectionCloseAction {\n  readonly type: typeof WS_CONNECTION_CLOSE;\n  readonly payload: string;\n}\n\nexport interface IWsConnectionSuccessAction {\n  readonly type: typeof WS_CONNECTION_SUCCESS;\n}\n\nexport interface IWsConnectionErrorAction {\n  readonly type: typeof WS_CONNECTION_ERROR;\n  readonly payload: any;\n}\n\nexport interface IWsGetMessageAction {\n  readonly type: typeof WS_GET_MESSAGE;\n  readonly payload: TOrders;\n}\n\nexport interface IWsConnectionClosedAction {\n  readonly type: typeof WS_CONNECTION_CLOSED;\n}\n\nexport interface IWsSendMessageAction {\n  readonly type: typeof WS_SEND_MESSAGE;\n}\n\nexport type TWebSocketActions =\n  | IWsConnectionStartAction\n  | IWsConnectionCloseAction\n  | IWsConnectionSuccessAction\n  | IWsConnectionErrorAction\n  | IWsGetMessageAction\n  | IWsConnectionClosedAction\n  | IWsSendMessageAction;\n\nexport const wsConnectionStart = () => {\n  return {\n    type: WS_CONNECTION_START,\n    payload: ''\n  };\n};\n\nexport const wsConnectionClose = () => {\n  return {\n    type: WS_CONNECTION_CLOSE\n  };\n};\n\nexport const wsConnectionSuccess = () => {\n  return {\n    type: WS_CONNECTION_SUCCESS\n  };\n};\n\nexport const wsConnectionError = () => {\n  return {\n    type: WS_CONNECTION_ERROR\n  };\n};\n\nexport const wsGetMessage = (message: TOrders) => {\n  return {\n    type: WS_GET_MESSAGE,\n    payload: message\n  };\n};\n\nexport const wsConnectionClosed = () => {\n  return {\n    type: WS_CONNECTION_CLOSED\n  };\n};\n\nexport const wsSendMessage = (message: TOrders) => {\n  return {\n    type: WS_SEND_MESSAGE,\n    payload: message\n  };\n};","import { TItem } from './types';\n\nexport function countIgredients(data: Array<TItem>) {\n\n  const counts: any = {};\n  const arrayToRender: Array<TItem> = []\n  \n  data.forEach((x: any) => { \n    return counts[x._id] = (counts[x._id] || 0) + 1; \n  });\n  \n  const arrCounts: Array<{}> = Object.keys(counts).map((key) => [(key), counts[key]]);\n\n  // crossmatch each [id, count] with every ingredient in the order\n  data.forEach((i: TItem) => {\n    arrCounts.forEach((item: any) => {\n      if (i._id === item[0]) {\n        arrayToRender.push(i, i['num'] = item[1])\n      }\n    })\n  })\n\n  // array of all ingredients with correct count\n  const finalArray = arrayToRender.filter((i: TItem) => typeof i === 'object')\n  console.log(finalArray)\n\n  // array of unique ingredients and correct count\n  const uniqueIngredients = finalArray.filter((a: TItem, i) => finalArray.findIndex((s: any) => a._id === s._id) === i)\n\n  return uniqueIngredients;\n}\n\n\n\n\n","import { useEffect, FunctionComponent } from 'react';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { TOrder, TItem } from \"../../utils/types\";\nimport { sayDate } from '../../utils/say-date';\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSE } from '../../services/actions/websocket';\nimport { getCookie } from '../../utils/cookie';\nimport { countIgredients } from '../../utils/filter-count';\nimport orderModalStyles from '../../components/order-modal/order-modal.module.css';\nimport orderPageStyles from './order-page.module.css';\n\nconst OrderPage: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n  const { orderId } = useParams<{orderId: string}>();\n  const userPath = useRouteMatch({ path: \"/profile/orders\" });\n  const orders = useSelector((store) => store.ws.messages.orders);\n  const order = orders && orders.find((c: TOrder) => c._id === orderId);\n  const ingredients = useSelector((store) => store.ingredients.foodData);\n\n  const statusClassname = order && order.status === \"done\" ? orderModalStyles.green : \"\";\n\n  const orderIngredients = order && order.ingredients.map((i: string) => {\n    return ingredients.filter((item: TItem) => item._id === i);\n  }).flat(1);\n  const uniqueIngredients = countIgredients(orderIngredients || []);\n\n  const totalPrice = orderIngredients?.reduce(\n    function (sum: number, item: TItem) {\n        return sum + item.price\n    }, 0\n  )\n\n  useEffect(() => {\n    dispatch( \n      userPath ? ({\n      type: WS_CONNECTION_START,\n      payload: `?token=${getCookie('accessToken').replace('Bearer ', '')}`\n    }) : ({\n      type: WS_CONNECTION_START,\n      payload: `/all`\n    }));\n\n    return () => {\n      dispatch({\n        type: WS_CONNECTION_CLOSE\n      });\n    };\n  }, [dispatch]);\n\n  const statusOrder = () => {\n    if (order?.status === \"done\") {\n      return \"Выполнен\"\n    } else if (order?.status === \"pending\") {\n      return \"Готовится\"\n    } else {\n      return \"Создан\"\n    }\n  }\n\n  return (\n    <>\n    {order && orders.length > 0 ? (\n      <section className={`${orderPageStyles.main} pt-30`}>\n        <p className={`${orderPageStyles.number} text text_type_digits-default mr-2`}>#{order.number}</p>\n        <div>\n          <h2 className={`${orderModalStyles.title} text text_type_main-medium mt-10`}>{order.name}</h2>\n          <p className={`${statusClassname} text text_type_main-default mt-3 mb-15 `}>{statusOrder()}</p>\n        </div>\n        <h2 className={`${orderModalStyles.title} text text_type_main-medium mb-6`}>Состав:</h2>\n        <div className={orderModalStyles.ingredients}>\n          {uniqueIngredients.map((item: TItem, i) => (\n            <div className={`${orderModalStyles.ingredient} mb-4 mr-6`} key={i}>\n              <div className={orderModalStyles.name_info}>\n                <div className={orderModalStyles.image} key={i}>\n                  <img\n                  alt=\"Фото\"\n                  src={item.image_mobile}\n                  className={orderModalStyles.round}\n                  />\n                </div>\n                <h3 className={`${orderModalStyles.item_name} text text_type_main-default ml-4 `}>{item.name}</h3>\n              </div>\n              <div className={orderModalStyles.prices}>\n                <p className={orderModalStyles.quantity + \" text text_type_digits-default mr-2\"}>\n                  {orderIngredients && `${item.count} x ${item.price}`}\n                </p>\n                <CurrencyIcon type=\"primary\" />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className={`${orderModalStyles.footer} mt-10`}>\n          <p className={`text text_type_main-default text_color_inactive`}>{sayDate(order.createdAt)}</p>\n          <div className={`${orderModalStyles.total} mt-2 mb-2`}>\n            <p className={`text text_type_digits-default mr-2`}>{totalPrice}</p>\n            <CurrencyIcon type=\"primary\" />\n          </div>\n        </div>\n      </section>\n      ) : null}\n    </> \n  )\n}\n\nexport default OrderPage;","import { FunctionComponent } from 'react';\nimport { Route, useLocation, Link } from 'react-router-dom';\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useDispatch } from '../../utils/hooks';\nimport { TOrder, TItem, TLocationState } from '../../utils/types';\nimport { OPEN_MODAL_ORDER } from '../../services/actions/modal';\nimport { useSelector } from '../../utils/hooks';\nimport { sayDate } from '../../utils/say-date';\nimport orderStyles from './order.module.css';\n\ninterface IOrder {\n  item: TOrder\n}\n\nconst Order: FunctionComponent<IOrder> = ({ item }) => {\n\n  const dispatch = useDispatch();\n  const location = useLocation<TLocationState>()\n  const orderId = item['_id']\n  const date = sayDate(item.createdAt);\n  const ingredients = useSelector((store) => store.ingredients.foodData);\n\n  const orderIngredients = item.ingredients.map((i: string) => {\n    return ingredients.filter((item: TItem) => item._id === i);\n  }).flat(1);\n\n  const images = () => {\n    if (orderIngredients.length > 6) {\n      return orderIngredients.slice(0, 6)\n    } else {\n      return orderIngredients\n    }\n  }\n\n  const otherImages = orderIngredients.length > 6\n    ? `+${orderIngredients.length - 6}`\n    : null;\n\n  const totalPrice = orderIngredients.reduce(\n    function (sum: number, item: TItem) {\n        return sum + item.price\n    }, 0\n  )\n\n  const statusOrder = () => {\n    if (item.status === \"done\") {\n      return \"Выполнен\"\n    } else if (item.status === \"pending\") {\n      return \"Готовится\"\n    } else {\n      return \"Создан\"\n    }\n  }\n\n  const statusClassname = item.status === \"done\" ? orderStyles.green : \"\";\n\n  const handleOpenModal = () => {\n    dispatch({\n      type: OPEN_MODAL_ORDER,\n      item\n    })\n  }\n\n  return (\n    <Link \n      className={orderStyles.link}\n      to={{\n          pathname: `${location.pathname}/${orderId}`,\n          state: { background: location }\n      }}\n    >\n    <div className={`${orderStyles.order} mr-2 mb-4 p-6`} onClick={handleOpenModal}>\n      <div className={`${orderStyles.basic} mb-6`}>\n        <p className={`text text_type_digits-default mr-2`}>#{item.number}</p>\n        <p className={`text text_type_main-default text_color_inactive`}>{date}</p>\n      </div>\n    <h2 className={`${orderStyles.title} text text_type_main-medium mb-6`}>{item.name}</h2>\n    <Route exact path=\"/profile/orders\"> \n      <p className={`${statusClassname} text text_type_main-default mb-6 `}>{statusOrder()}</p>\n    </Route>\n    <div className={orderStyles.basic}>\n      <div className={`${orderStyles.logos}`}>\n        {images().map((item, i) => (\n          <div className={orderStyles.image} key={i}>\n            <img\n            alt=\"Фото\"\n            src={item.image_mobile}\n            className={orderStyles.round}\n            />\n        </div>\n        ))}\n        {otherImages && (\n            <div className={`${orderStyles.other} text text_type_main-default`}>{otherImages}</div>\n        )}\n      </div>\n      <div className={`${orderStyles.total} mt-2 mb-2`}>\n        <p className={`text text_type_digits-default mr-2`}>{totalPrice}</p>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n    </div>\n    </div>\n    </Link>\n    \n  )\n}\n\nexport default Order;","import { FunctionComponent, useEffect } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSE } from '../../services/actions/websocket';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { getCookie } from '../../utils/cookie';\nimport { TOrder } from '../../utils/types';\nimport Order from '../../components/order/order';\nimport ProfileMenu from '../profile-menu/profile-menu';\nimport profileOrdersStyles from './profile-orders.module.css';\n\nconst ProfileOrders: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n  const orders = useSelector((store) => store.ws.messages);\n  const user = useSelector((state) => state.getUser.user);\n  const auth = useSelector((state) => state.getUser.isAuthenticated);\n\n  useEffect(() => {\n    if (user.name !== '' && user.email !== '') {\n      const accessToken = getCookie('accessToken') as string;\n      const wsToken = accessToken.replace('Bearer ', '');\n      dispatch({\n        type: WS_CONNECTION_START,\n        payload: `?token=${wsToken}`\n      });\n  \n      return () => {\n        dispatch({\n          type: WS_CONNECTION_CLOSE\n        });\n      };\n    }\n  }, [user, dispatch]);\n\n  // if (!auth) {\n  //   return (\n  //     <Redirect\n  //       to={{\n  //         pathname: \"/login\",\n  //       }}\n  //     />\n  //   );\n  // }\n\n  return (\n    <div className={`${profileOrdersStyles.profile_orders} pt-10`}>\n    <ProfileMenu />\n    <div className={`${profileOrdersStyles.orders_list}`}>\n      {orders.orders.map((item: TOrder, i: any) => (\n        <Order item={item} key={i} />\n      ))}\n    </div>\n    </div>\n  )\n}\n\nexport default ProfileOrders;","import { FunctionComponent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport notFoundStyles from './not-found.module.css'\n\nconst PageNotFound: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  return (\n    <section className={notFoundStyles.main}>\n      <h2 className=\"text text_type_digits-large mt-10\">404</h2>\n      <p className=\"text text_type_main-large mt-10 mb-10\">Страница не найдена</p>\n      <Button type=\"primary\" size=\"medium\" onClick={() => history.goBack()}>Назад</Button>\n    </section>\n  )\n};\n\nexport default PageNotFound;","import { FunctionComponent } from 'react';\nimport { TOrders, TOrder } from '../../utils/types';\nimport summaryStyles from './feed-summary.module.css';\n\ninterface IOrdersSummary {\n  allOrders: TOrders;\n}\n\nconst FeedSummary: FunctionComponent<IOrdersSummary> = ({ allOrders }) => {\n\n  const completedOrders = allOrders.orders.filter((item) => item.status === 'done');\n  const progressOrders = allOrders.orders.filter((item) => item.status !== 'done');\n\n  return (\n    <div className={`${summaryStyles.container}`}>\n      <div className={summaryStyles.status}>\n        <div className={summaryStyles.status_column}>\n          <p className={`${summaryStyles.subtitle} mb-4 text text_type_main-medium`}>\n            Готовы:\n          </p>\n          <ul className={summaryStyles.list}>\n            {completedOrders.map((item: TOrder) => (\n              <li key={item._id}>\n                <p className={`${summaryStyles.number} text text_type_digits-default`}>\n                  {item.number}\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className={summaryStyles.status_column}>\n        <p className={`${summaryStyles.subtitle} mb-4 text text_type_main-medium`}>\n            В работе:\n          </p>\n          <ul className={summaryStyles.list}>\n            {progressOrders.map((item: TOrder) => (\n              <li key={item._id}>\n                <p className=\"text text_type_digits-default\">\n                  {item.number}\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className={summaryStyles.total}>\n        <p className=\"text text_type_main-medium mt-15\">Выполнено за все время:</p>\n        <p className=\"text text_type_digits-large\">{allOrders.total}</p>\n      </div>\n      <div className={summaryStyles.total}>\n        <p className=\"text text_type_main-medium mt-15\">Выполнено за сегодня:</p>\n        <p className=\"text text_type_digits-large\">{allOrders.totalToday}</p>\n      </div>\n    </div>\n  )\n};\n\nexport default FeedSummary;","import { FunctionComponent, useEffect } from 'react';\nimport { useSelector, useDispatch } from '../../utils/hooks';\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSE } from '../../services/actions/websocket';\nimport { TOrder } from '../../utils/types';\nimport FeedSummary from '../feed-summary/feed-summary';\nimport Order from '../order/order';\nimport feedStyles from './feed.module.css';\n\nconst Feed: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n  const orders = useSelector((store) => store.ws.messages);\n\n  useEffect(() => {\n    dispatch({\n      type: WS_CONNECTION_START,\n      payload: '/all'\n    });\n\n    return () => {\n      dispatch({\n        type: WS_CONNECTION_CLOSE\n      });\n    };\n  }, [dispatch]);\n\n  return (\n    <section className={`${feedStyles.orders} pb-10 pt-10`}>\n      <h1 className={`text text_type_main-large mb-5`}>Лента заказов</h1> \n      <div className={feedStyles.container}>\n        <div className={`${feedStyles.orders_list}`}>\n          {orders.orders.map((item: TOrder, i: any) => (\n            <Order item={item} key={i}/>\n          ))}\n        </div>\n        <FeedSummary allOrders={orders}/>\n      </div>\n      \n    </section>\n  )\n}\n\nexport default Feed;","import { FunctionComponent } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useSelector } from '../../utils/hooks';\nimport { TOrder, TItem } from '../../utils/types';\nimport { sayDate } from '../../utils/say-date';\nimport { countIgredients } from '../../utils/filter-count';\nimport orderModalStyles from './order-modal.module.css';\n\nconst OrderModal: FunctionComponent = () => {\n\n  const { orderId } = useParams<{orderId: string}>();\n  const { orders } = useSelector((store) => store.ws.messages);\n  const order = orders.find((o: TOrder) => o._id === orderId);\n  console.log(order)\n  const ingredients = useSelector((store) => store.ingredients.foodData);\n\n  const statusClassname = order && order.status === \"done\" ? orderModalStyles.green : \"\";\n\n  const orderIngredients = order && order.ingredients.map((i: string) => {\n    return ingredients.filter((item: TItem) => item._id === i);\n  }).flat(1);\n\n  const uniqueIngredients = countIgredients(orderIngredients || []);\n  \n  const totalPrice = orderIngredients?.reduce(\n    function (sum: number, item: TItem) {\n        return sum + item.price\n    }, 0\n  )\n\n  const statusOrder = () => {\n    if (order && order.status === \"done\") {\n      return \"Выполнен\"\n    } else if (order && order.status === \"pending\") {\n      return \"Готовится\"\n    } else {\n      return \"Создан\"\n    }\n  }\n\n  return (\n    <>\n    {order && orders.length !== 0 ? (\n      <section className={`${orderModalStyles.main}`}>\n        <p className={`${orderModalStyles.number} text text_type_digits-default mr-2`}>#{order.number}</p>\n        <div>\n          <h2 className={`${orderModalStyles.title} text text_type_main-medium mt-5`}>{order.name}</h2>\n          <p className={`${statusClassname} text text_type_main-default mt-3 mb-15 `}>{statusOrder()}</p>\n        </div>\n        <h2 className={`${orderModalStyles.title} text text_type_main-medium mb-6`}>Состав:</h2>\n        <div className={orderModalStyles.ingredients}>\n          {uniqueIngredients.map((item: TItem, i: any) => (\n            <div className={`${orderModalStyles.ingredient} mb-4 mr-6`} key={i}>\n              <div className={orderModalStyles.name_info}>\n                <div className={orderModalStyles.image} key={i}>\n                  <img\n                  alt=\"Фото\"\n                  src={item.image_mobile}\n                  className={orderModalStyles.round}\n                  />\n                </div>\n                <h3 className={`${orderModalStyles.item_name} text text_type_main-default ml-4 `}>{item.name}</h3>\n              </div>\n              <div className={orderModalStyles.prices}>\n                <p className={orderModalStyles.quantity + \" text text_type_digits-default mr-2\"}>\n                  {orderIngredients && `${item.num} x ${item.price}`}\n                </p>\n                <CurrencyIcon type=\"primary\" />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className={`${orderModalStyles.footer} mt-10`}>\n          <p className={`text text_type_main-default text_color_inactive`}>{sayDate(order.createdAt)}</p>\n          <div className={`${orderModalStyles.total} mt-2 mb-2`}>\n            <p className={`text text_type_digits-default mr-2`}>{totalPrice}</p>\n            <CurrencyIcon type=\"primary\" />\n          </div>\n        </div>\n      </section>\n      ) : null}\n    </> \n  )\n}\n\nexport default OrderModal;","import { FunctionComponent, useEffect } from 'react';\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\nimport { CLOSE_MODAL } from '../../services/actions/modal';\nimport { ProtectedRoute } from '../../pages/protected-route';\nimport { useDispatch } from '../../utils/hooks';\nimport { getIngredients } from '../../services/actions/ingredients';\nimport { TLocationState } from '../../utils/types';\nimport Header from '../app-header/app-header';\nimport Main from '../main/main';\nimport Login from '../../pages/login/login';\nimport Register from '../../pages/register/register';\nimport ForgotPassword from '../../pages/forgot-password/forgot-password';\nimport ResetPassword from '../../pages/reset-password/reset-password';\nimport Profile from '../../pages/profile/profile';\nimport Modal from '../modal/modal';\nimport IngredientsDetails from '../ingredient-details/ingredient-details';\nimport IngredientPage from '../../pages/ingredient-page/ingredient-page';\nimport OrderPage from '../../pages/order-page/order-page';\nimport ProfileOrders from '../../pages/profile-orders/profile-orders';\nimport PageNotFound from '../../pages/not-found/not-found';\nimport Feed from '../feed/feed';\nimport OrderModal from '../order-modal/order-modal';\n\nconst App: FunctionComponent = () => {\n\n  const dispatch = useDispatch();\n  const location = useLocation(); \n  const { state } = location as TLocationState;\n  const background = state && state.background;\n  const history = useHistory();\n\n  const handleModalClose = () => {\n    dispatch({\n      type: CLOSE_MODAL\n    })\n    history.goBack(); \n  };\n\n  useEffect(() => {\n    dispatch(getIngredients())\n  }, [dispatch])\n\n  return (\n    <div>\n      <Header />\n        <Switch location={background || location}>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n          <Route path=\"/register\">\n            <Register/>\n          </Route>\n          <Route path=\"/forgot-password\">\n            <ForgotPassword/>\n          </Route>\n          <Route path=\"/reset-password\">\n            <ResetPassword/>\n          </Route>\n          <ProtectedRoute exact path=\"/profile\">\n            <Profile/>\n          </ProtectedRoute>\n          <Route exact path=\"/profile/orders\">\n            <ProfileOrders/>\n          </Route>\n          <Route path=\"/profile/orders/:orderId\">\n            <OrderPage/>\n          </Route>\n          <Route path=\"/ingredients/:ingredientId\">\n            <IngredientPage />\n          </Route>\n          <Route exact path=\"/\">\n            <Main />\n          </Route>\n          <Route exact path=\"/feed\">\n            <Feed />\n          </Route>\n          <Route path=\"/feed/:orderId\">\n            <OrderPage />\n          </Route>\n          <Route path=\"*\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n        {background && (\n        <Route \n          path=\"/ingredients/:ingredientId\"\n          children={\n            <Modal\n              title=\"Детали ингредиента\" \n              onClose={handleModalClose}\n            >\n            <IngredientsDetails/>\n          </Modal>\n          }\n        />\n      )}\n      {background && (\n        <Route \n          path=\"/feed/:orderId\"\n          children={\n            <Modal\n              title=\"\" \n              onClose={handleModalClose}\n            >\n            <OrderModal />\n          </Modal>\n          }\n        />\n      )}\n      {background && (\n        <ProtectedRoute \n          path=\"/profile/orders/:orderId\"\n          children={\n            <Modal\n              title=\"\" \n              onClose={handleModalClose}\n            >\n            <OrderModal />\n          </Modal>\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App;\n","import {\n  MAKE_ORDER_REQUEST,\n  MAKE_ORDER_SUCCESS,\n  MAKE_ORDER_FAILED,\n  GET_ORDER_REQUEST,\n  GET_ORDER_SUCCESS,\n  GET_ORDER_FAILED\n} from '../actions/order';\nimport { TMakeOrderActions } from '../actions/order';\nimport { TOrder } from '../../utils/types';\n\ntype TMakeOrderState = {\n  number: number | null;\n  orderMakeRequest: boolean;\n  orderMakeFailed: boolean;\n  order: TOrder | {},\n  orderGetRequest: boolean,\n  orderGetFailed: boolean\n}\n\nexport const initialState: TMakeOrderState = {\n  number: null,\n  orderMakeRequest: false,\n  orderMakeFailed: false,\n  order: {},\n  orderGetRequest: false,\n  orderGetFailed: false,\n}\n\nexport const orderReducer = (state = initialState, action: TMakeOrderActions): TMakeOrderState => {\n  switch (action.type) {\n    case MAKE_ORDER_REQUEST: {\n      return {\n        ...state,\n        orderMakeRequest: true\n      }\n    }\n    case MAKE_ORDER_SUCCESS: {\n      return {\n        ...state,\n        number: action.number,\n        orderMakeRequest: false,\n        orderMakeFailed: false,\n      }\n    }\n    case MAKE_ORDER_FAILED: {\n      return {\n        ...state,\n        orderMakeFailed: true,\n        orderMakeRequest: false,\n      }\n    }\n    case GET_ORDER_REQUEST: {\n      return {\n        ...state,\n        orderGetRequest: true\n      }\n    }\n    case GET_ORDER_SUCCESS: {\n      return {\n        ...state,\n        order: action.order,\n        orderGetRequest: false,\n        orderGetFailed: false,\n      }\n    }\n    case GET_ORDER_FAILED: {\n      return {\n        ...state,\n        orderGetFailed: true,\n        orderGetRequest: false,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILED,\n  ADD_BUN,\n  ADD_INNER_ITEM,\n  REMOVE_INNER_ITEM,\n  UPDATE_CONSTRUCTOR_LIST,\n  RESET_CONSTRUSTOR\n} from '../actions/ingredients';\nimport { TGetIngredientsActions } from '../actions/ingredients';\nimport { TItem } from '../../utils/types';\n\ntype TGetIngredientsState = {\n  foodData: Array<TItem>;\n  foodDataRequest: boolean;\n  foodDataFailed: boolean;\n  constructor: {\n    selectedBun: TItem | {};\n    innerItems: Array<TItem>;\n  };\n  selectedIngredient: TItem | {};\n}\n\n\nexport const initialState: TGetIngredientsState = {\n  foodData: [],\n  foodDataRequest: false,\n  foodDataFailed: false,\n  constructor: {\n    selectedBun: {},\n    innerItems: [],\n  },\n  selectedIngredient: {}\n}\n\nexport const ingredientsReducer = (state = initialState, action: TGetIngredientsActions): TGetIngredientsState => {\n  switch (action.type) {\n    case GET_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        foodDataRequest: true,\n      };\n    }\n    case GET_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        foodData: action.foodData.map((item) => {\n          item.count = 0;\n          return item\n        }),\n        foodDataRequest: false,\n        foodDataFailed: false\n      }\n    }\n    case GET_INGREDIENTS_FAILED: {\n      return {\n        ...state,\n        foodDataFailed: true,\n        foodDataRequest: false,\n      }\n    }\n    case ADD_BUN: {\n      return {\n        ...state,\n        constructor: {\n          ...state.constructor,\n          selectedBun: action.bun\n        },\n        foodData: [...state.foodData].map(item => {\n          if (item.type === \"bun\") {\n            if (item._id === action.bun._id) {\n              return { ...item, count: 2 };\n            } else {\n              return { ...item, count: 0 };\n            }\n          } \n            return item;\n        })\n      }\n    }\n    case ADD_INNER_ITEM: {\n      return {\n        ...state,\n        constructor: {\n          ...state.constructor,\n          innerItems: [ ...state.constructor.innerItems, action.item]\n        },\n        foodData: [...state.foodData].map(item =>\n          item._id === action.item._id ? { ...item, count: ++item.count } : item\n        )\n      }\n    }\n    case REMOVE_INNER_ITEM: {\n      return {\n        ...state,\n        constructor: {\n          ...state.constructor,\n          innerItems: [...state.constructor.innerItems].filter(item => item.dragId !== action.item.dragId)\n        },\n        foodData: [...state.foodData].map(item =>\n          item._id === action.item._id ? { ...item, count: --item.count } : item\n        )\n      }\n    }\n\n    case UPDATE_CONSTRUCTOR_LIST: {\n      return {\n        ...state,\n        constructor: {\n          ...state.constructor,\n          innerItems: action.updatedItems\n        }\n      }\n    }\n    case RESET_CONSTRUSTOR: {\n      return {\n        ...state,\n        constructor: {\n          ...state.constructor,\n          selectedBun: {},\n          innerItems: []\n        },\n        foodData: [...state.foodData].map((item) => {\n          item.count = 0;\n          return item\n        }),\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  OPEN_MODAL,\n  CLOSE_MODAL,\n  OPEN_MODAL_ORDER\n} from '../actions/modal';\nimport { TModalActions} from '../actions/modal';\nimport { TItem, TOrder } from '../../utils/types';\n\ntype TIngredientState = {\n  selectedItem: TItem | {};\n  selectedOrder: TOrder | {};\n  modalOpened: boolean;\n  modalClosed: boolean;\n}\n\nexport const initialState: TIngredientState = {\n  selectedItem: {},\n  selectedOrder: {},\n  modalOpened: false,\n  modalClosed: true,\n}\n\nexport const modalReducer = (state = initialState, action: TModalActions) => {\n  switch (action.type) {\n    case OPEN_MODAL: {\n      return {\n        ...state,\n        selectedItem: action.item,\n        modalOpened: true,\n        modalClosed: false\n      }\n    }\n    case OPEN_MODAL_ORDER: {\n      return {\n        ...state,\n        selectedOrder: action.item,\n        modalOpened: true,\n        modalClosed: false\n      }\n    }\n    case CLOSE_MODAL: {\n      return {\n        ...state,\n        selectedItem: {},\n        modalOpened: false,\n        modalClosed: true,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED\n} from '../actions/register';\nimport { TRegisterUserActions } from '../actions/register';\nimport { TUserGet } from '../../utils/types';\n\ntype TRegisterUserState = {\n  user: TUserGet;\n  registerRequest: boolean;\n  registerFailed: boolean;\n  isAuthenticated: boolean;\n}\n\nexport const initialState: TRegisterUserState = {\n  user: { \n    email: \"\",\n    name: \"\"\n  },\n  registerRequest: false,\n  registerFailed: false,\n  isAuthenticated: false\n}\n\nexport const registerReducer = (state = initialState, action: TRegisterUserActions) => {\n  switch (action.type) {\n    case REGISTER_USER_REQUEST: {\n      return {\n        ...state,\n        registerRequest: true,\n      };\n    }\n    case REGISTER_USER_SUCCESS: {\n      return {\n        ...state,\n        registerFailed: false,\n        registerRequest: false,\n        isAuthenticated: true,\n        user: action.user\n      }\n    }\n    case REGISTER_USER_FAILED: {\n      return {\n        ...state,\n        registerFailed: true,\n        registerRequest: false,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAILED\n} from '../actions/login';\nimport { TUserGet } from '../../utils/types';\nimport { TLoginUserActions } from '../actions/login';\n\ntype TLoginUserState = {\n  user: TUserGet;\n  isLoggedIn: boolean;\n  loginRequest: boolean;\n  loginFailed: boolean;\n}\n\nexport const initialState: TLoginUserState = {\n  user: { \n    email: \"\",\n    name: \"\"\n  },\n  isLoggedIn: false,\n  loginRequest: false,\n  loginFailed: false,\n}\n\nexport const loginReducer = (state = initialState, action: TLoginUserActions): TLoginUserState=> {\n  switch (action.type) {\n    case LOGIN_USER_REQUEST: {\n      return {\n        ...state,\n        loginRequest: true,\n      };\n    }\n    case LOGIN_USER_SUCCESS: {\n      return {\n        ...state,\n        isLoggedIn: true,\n        loginRequest: false,\n        loginFailed: false,\n        user: action.user\n      }\n    }\n    case LOGIN_USER_FAILED: {\n      return {\n        ...state,\n        isLoggedIn: false,\n        loginRequest: false,\n        loginFailed: true,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAILED,\n} from '../actions/logout';\nimport { TLogoutUserActions } from '../actions/logout';\n\ntype TLogoutUserState = {\n  logoutRequest: boolean;\n  logoutFailed: boolean;\n}\n\nexport const initialState: TLogoutUserState = {\n  logoutRequest: false,\n  logoutFailed: false\n}\n\nexport const logoutReducer = (state = initialState, action: TLogoutUserActions) => {\n  switch (action.type) {\n    case LOGOUT_REQUEST: {\n      return {\n        ...state,\n        logoutRequest: true,\n      };\n    }\n    case LOGOUT_SUCCESS: {\n      return {\n        ...state,\n        logoutRequest: false,\n        logoutFailed: false\n      }\n    }\n    case LOGOUT_FAILED: {\n      return {\n        ...state,\n        logoutRequest: false,\n        logoutFailed: true\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAILED\n } from '../actions/forgot-pass';\n import type { TForgotPassActions } from '../actions/forgot-pass';\n\n type TForgotPassState = {\n  forgotRequest: boolean;\n  isEmailSent: boolean;\n  forgotFailed: boolean;\n} \n\n export const initialState: TForgotPassState = {\n  forgotRequest: false,\n  isEmailSent: false,\n  forgotFailed: false\n}\n\nexport const forgotReducer = (state = initialState, action: TForgotPassActions) => {\n  switch (action.type) {\n    case FORGOT_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        forgotRequest: true,\n      };\n    }\n    case FORGOT_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        forgotRequest: false,\n        isEmailSent: true,\n        forgotFailed: false\n      }\n    }\n    case FORGOT_PASSWORD_FAILED: {\n      return {\n        ...state,\n        forgotRequest: false,\n        forgotFailed: true\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n\n","import {\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAILED\n } from '../actions/reset-pass';\n import { TResetPassActions } from '../actions/reset-pass';\n\n type TResetPassState = {\n  resetRequest: boolean;\n  isPasswordReset: boolean;\n  resetFailed: boolean;\n}\n\n export const initialState: TResetPassState = {\n  resetRequest: false,\n  isPasswordReset: false,\n  resetFailed: false\n}\n\nexport const resetReducer = (state = initialState, action: TResetPassActions) => {\n  switch (action.type) {\n    case RESET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        resetRequest: true,\n      };\n    }\n    case RESET_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        resetRequest: false,\n        isPasswordReset: true,\n        resetFailed: false\n      }\n    }\n    case RESET_PASSWORD_FAILED: {\n      return {\n        ...state,\n        resetRequest: false,\n        resetFailed: true\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED\n} from '../actions/get-user';\nimport { TGetUserActions } from '../actions/get-user';\nimport { TUserGet } from '../../utils/types';\n\ntype TGetUserState = {\n  user: TUserGet;\n  isAuthenticated: boolean;\n  getUserRequest: boolean;\n  getUserFailed: boolean;\n} \n\nexport const initialState: TGetUserState = {\n  user: { \n    email: \"\",\n    name: \"\"\n  },\n  isAuthenticated: false,\n  getUserRequest: false,\n  getUserFailed: false\n}\n\nexport const getUserReducer = (state = initialState, action: TGetUserActions) => {\n  switch (action.type) {\n    case GET_USER_REQUEST: {\n      return {\n        ...state,\n        getUserRequest: true,\n      };\n    }\n    case GET_USER_SUCCESS: {\n      return {\n        ...state,\n        isAuthenticated: true,\n        getUserRequest: false,\n        getUserFailed: false,\n        user: action.user\n      }\n    }\n    case GET_USER_FAILED: {\n      return {\n        ...state,\n        isAuthenticated: false,\n        getUserRequest: false,\n        getUserFailed: true\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  REFRESH_TOKEN_REQUEST,\n  REFRESH_TOKEN_SUCCESS,\n  REFRESH_TOKEN_FAILED\n} from '../actions/refresh-token';\nimport { TRefreshTokenActions } from '../actions/refresh-token';\n\ntype TRefreshTokenState = {\n  token: string | undefined;\n  tokenRequest: boolean;\n  tokenFailed: boolean;\n}\n\nexport const initialState: TRefreshTokenState = {\n  token: \"\",\n  tokenRequest: false,\n  tokenFailed: false\n}\n\nexport const tokenReducer = (state = initialState, action: TRefreshTokenActions) => {\n  switch (action.type) {\n    case REFRESH_TOKEN_REQUEST: {\n      return {\n        ...state,\n        tokenRequest: true,\n      };\n    }\n    case REFRESH_TOKEN_SUCCESS: {\n      return {\n        ...state,\n        tokenFailed: false,\n        tokenRequest: false,\n        token: action.accessToken\n      }\n    }\n    case REFRESH_TOKEN_FAILED: {\n      return {\n        ...state,\n        token: \"\",\n        tokenFailed: true,\n        tokenRequest: false,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  PATCH_USER_REQUEST,\n  PATCH_USER_SUCCESS,\n  PATCH_USER_FAILED\n} from '../actions/patch-user';\nimport { TUserGet } from '../../utils/types';\nimport { TPatchUserActions } from '../actions/patch-user';\n\ntype TPatchUserState = {\n  user: TUserGet;\n  patchUserRequest: boolean;\n  isSuccess: boolean;\n  patchUserFailed: boolean;\n} \n\nexport const initialState: TPatchUserState = {\n  user: { \n    email: \"\",\n    name: \"\"\n  },\n  patchUserRequest: false,\n  isSuccess: false,\n  patchUserFailed: false\n}\n\nexport const patchUserReducer = (state = initialState, action: TPatchUserActions) => {\n  switch (action.type) {\n    case PATCH_USER_REQUEST: {\n      return {\n        ...state,\n        patchUserRequest: true,\n      };\n    }\n    case PATCH_USER_SUCCESS: {\n      return {\n        ...state,\n        patchUserRequest: false,\n        patchUserFailed: false,\n        isSuccess: true,\n        user: action.user\n      }\n    }\n    case PATCH_USER_FAILED: {\n      return {\n        ...state,\n        patchUserRequest: false,\n        patchUserFailed: true,\n        isSuccess: false\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TOrders } from '../../utils/types';\nimport {\n  WS_CONNECTION_SUCCESS,\n  WS_CONNECTION_ERROR,\n  WS_GET_MESSAGE,\n  WS_CONNECTION_CLOSED\n} from '../actions/websocket';\nimport { TWebSocketActions } from '../actions/websocket';\n\ntype TWsState = {\n  wsConnected: boolean;\n  messages: TOrders;\n  error?: Event;\n}\n\nexport const initialState: TWsState = {\n  wsConnected: false,\n  messages: {\n    success: false,\n    orders: [],\n    total: 0,\n    totalToday: 0,\n  }\n}\n\nexport const wsReducer = (state = initialState, action: TWebSocketActions): TWsState => {\n  switch (action.type) {\n    case WS_CONNECTION_SUCCESS:\n      return {\n        ...state,\n          error: undefined,\n          wsConnected: true\n        };\n    case WS_CONNECTION_ERROR:\n      return {\n        ...state,\n          error: action.payload,\n          wsConnected: false\n        };\n    case WS_CONNECTION_CLOSED:\n      return {\n        ...state,\n          error: undefined,\n          wsConnected: false\n        };\n\n    case WS_GET_MESSAGE:\n      return {\n        ...state,\n          error: undefined,\n          messages: action.payload\n        };\n    default:\n      return state;\n  }\n}; ","import { combineReducers } from 'redux';\nimport { orderReducer } from './order';\nimport { ingredientsReducer } from './ingredients';\nimport { modalReducer } from './modal';\nimport { registerReducer } from './register';\nimport { loginReducer } from './login';\nimport { logoutReducer } from './logout';\nimport { forgotReducer } from './forgot-pass';\nimport { resetReducer } from './reset-pass';\nimport { getUserReducer } from './get-user';\nimport { tokenReducer } from './refresh-token';\nimport { patchUserReducer } from './patch-user';\nimport { wsReducer } from './websocket';\n\nexport const rootReducer = combineReducers({\n  order: orderReducer,\n  ingredients: ingredientsReducer,\n  modal: modalReducer,\n  register: registerReducer,\n  login: loginReducer,\n  logout: logoutReducer,\n  forgot: forgotReducer,\n  reset: resetReducer,\n  getUser: getUserReducer,\n  patchUser: patchUserReducer,\n  token: tokenReducer,\n  ws: wsReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport { BrowserRouter} from 'react-router-dom';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './services/reducers/index';\nimport { Provider } from 'react-redux';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport { socketMiddleware } from './services/middleware/socketMiddleware';\nimport { WEB_SOCKET } from './utils/constants';\nimport { wsActions } from './services/actions/websocket';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(WEB_SOCKET, wsActions)));\n\nexport const store = createStore(rootReducer, enhancer);\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter basename='/react-burger'>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import type { Middleware, MiddlewareAPI } from 'redux';\nimport type { TAppDispatch, TRootState } from '../../utils/types';\nimport { TWsActions } from '../../utils/types';\n\nexport const socketMiddleware = (wsUrl: string, wsActions: TWsActions ): Middleware => {\n    return ((store: MiddlewareAPI<TAppDispatch, TRootState>) => {\n      let socket: WebSocket | null = null;\n\n    return next => (action) => {\n      const { dispatch } = store;\n      const { type, payload } = action;\n      const { wsStart, wsClose, onOpen, onClose, onError, onMessage } = wsActions;\n \n      if (type === wsStart) {\n        socket = new WebSocket(`${wsUrl}${payload}`);\n      }\n      if (type === wsClose) {\n        socket?.close();\n      }\n      if (socket) {\n        socket.onopen = event => {\n          dispatch({ type: onOpen, payload: event });\n        };\n        socket.onerror = event => {\n          dispatch({ type: onError, payload: event });\n        };\n        socket.onmessage = event => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          dispatch({ type: onMessage, payload: parsedData });\n        };\n        socket.onclose = event => {\n          dispatch({ type: onClose, payload: event });\n        };\n      }\n      next(action);\n    };\n    }) as Middleware;\n}; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"burger-ingredients_list__HZyi9\",\"tab\":\"burger-ingredients_tab__1Ru1Z\",\"menu\":\"burger-ingredients_menu__3KO37\",\"type\":\"burger-ingredients_type__2qVtv\",\"title\":\"burger-ingredients_title__32v1n\",\"error\":\"burger-ingredients_error__1mKhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"order_link__39ZAp\",\"order\":\"order_order__3S06G\",\"basic\":\"order_basic__3a4_T\",\"title\":\"order_title__Jj7o9\",\"total\":\"order_total__3d3MU\",\"image\":\"order_image__5-GwK\",\"round\":\"order_round__1dIqe\",\"logos\":\"order_logos__3Avvl\",\"other\":\"order_other__2lt4V\",\"green\":\"order_green__3dygC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed-summary_container__hagXz\",\"list\":\"feed-summary_list__2pDqW\",\"number\":\"feed-summary_number__YsPwc\",\"status\":\"feed-summary_status__il50G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_container\":\"input_input_container__2eu-K\",\"input\":\"input_input__3M12a\",\"input_placeholder\":\"input_input_placeholder__1ujM6\",\"icon\":\"input_icon__GhfzZ\",\"disabled\":\"input_disabled__1NBWc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burder-constructor_container__DbjLp\",\"wrapper\":\"burder-constructor_wrapper__3auvS\",\"food_list\":\"burder-constructor_food_list__3Wqpj burger-ingredients_menu__3KO37\",\"order\":\"burder-constructor_order__ssENe\",\"price\":\"burder-constructor_price__1HxnJ\",\"hover\":\"burder-constructor_hover__PLW8o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_item\":\"profile-menu_nav_item__3MyqK\",\"active\":\"profile-menu_active__1ZiY1\",\"nav\":\"profile-menu_nav__2dq7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__2wfWp\",\"price\":\"ingredient_price__2xF1Q\",\"title\":\"ingredient_title__1-D77\",\"link\":\"ingredient_link__2iurn\",\"count\":\"ingredient_count__2JTsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__26YER\",\"text\":\"profile_text__14iPx\",\"buttons\":\"profile_buttons__1vzW7\",\"inputs\":\"profile_inputs__22OAT\",\"invisible\":\"profile_invisible__Vro1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal_container__3GddM\",\"header\":\"modal_header__2iX3r\",\"icon\":\"modal_icon__1hfLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderNumber\":\"order-details_orderNumber__7RKjN\",\"title\":\"order-details_title__FoYOr\",\"error\":\"order-details_error__39Vw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"user-form_form__2jxAY\",\"title\":\"user-form_title__39orX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"feed_orders__hw0P4\",\"container\":\"feed_container__2dAnS\",\"orders_list\":\"feed_orders_list__23dRr burder-constructor_container__DbjLp\",\"link\":\"feed_link__3iZay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order-page_main__buHzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders_list\":\"profile-orders_orders_list__Km4Z3 feed_orders_list__23dRr burder-constructor_container__DbjLp\",\"profile_orders\":\"profile-orders_profile_orders__I5EGi profile_profile__26YER\",\"link\":\"profile-orders_link__3p22S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order-modal_main__1Mx-o\",\"number\":\"order-modal_number__VQrhc\",\"title\":\"order-modal_title__3c5TG\",\"green\":\"order-modal_green__3RvO6\",\"ingredients\":\"order-modal_ingredients__3F_sv\",\"footer\":\"order-modal_footer__2gRhx\",\"total\":\"order-modal_total__16p3z\",\"ingredient\":\"order-modal_ingredient__350V1\",\"image\":\"order-modal_image__qvayS order_image__5-GwK\",\"round\":\"order-modal_round__28AbR order_round__1dIqe\",\"item_name\":\"order-modal_item_name__16ubi\",\"name_info\":\"order-modal_name_info__L-sJ2\",\"prices\":\"order-modal_prices__2hsmg\"};"],"sourceRoot":""}